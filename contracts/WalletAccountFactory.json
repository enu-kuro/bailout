{
  "contractName": "WalletAccountFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract WalletAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract WalletAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract WalletAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract WalletAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SimpleAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/samples/WalletAccountFactory.sol\":\"WalletAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x84cbc33838326f8a92fb9db5e27176f8eda5de8797cd6c838c11ef99c724accc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f93d36b8355575c884fb938ad43763207cc67f4abd791e528294ec603cbfbb\",\"dweb:/ipfs/QmTGVR5LR8BAtUMnAQ89DdyMaRv2A7kS4WoBuFEXaW5Lfw\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x480bc688d336e5d8b30f6705af3c73468dc7a8c4e7edcfcacce955939b0786fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d71598df93feea24df0fc19ef2f0280382ace3adf5a5fb62bd62a9ec458c47c8\",\"dweb:/ipfs/QmbyY8TXQoRZ1GmNN2c9JVStMmkiJMfmMJ3wwEPLQcT3Hq\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xafc07f37809f74d9c66d6461cc0f85fb5147ab855acd0acc30af4b2272130c61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e63fa9a8bc793ccbdc82e93f85a4d2d5b66fd3f42303a6f5fe54c5ff230eb81\",\"dweb:/ipfs/QmVMxEw74WgFPqTZjXbYBLbo6gbbjtTocnfBW54Ft6W6Tb\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x73bc87e62dd54bc3d59d562fcaa3559f94ba606639fa6b96edde7eb4ce2eecd5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4df277a04368858dfd3860d242a7caae265eca4bfafa650a60704462de339802\",\"dweb:/ipfs/QmW42jjQkjuQFEJK4wruykViS4rANorZA6i9Kd4nCwCBtv\"]},\"project:/contracts/core/Helpers.sol\":{\"keccak256\":\"0x4bad395ba0b408c87d0a30a76f8fd5a9915e3a531daeee23ccea0671574597a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c737b70ddf5a0e25633dc2e4db8f377943898d5f143d48b9c2aeffbe00e5b303\",\"dweb:/ipfs/QmWEVD6a372RDKyXQUXNWAohA7BGqNehBJnGi56HAmNFpm\"]},\"project:/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"project:/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"project:/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"project:/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"project:/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]},\"project:/contracts/samples/WalletAccount.sol\":{\"keccak256\":\"0x9cbac5f838861811bf729ce7ee1d8ffe5c361a07e5c212709fcad4c16ac708a0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a770e4398958bdb624e3449253a155a900cd08caa715619879312dde8a00f09b\",\"dweb:/ipfs/QmbuVkfKXRx99NF3np28eiJqefaak9DYmpYgEJsVJHuXgL\"]},\"project:/contracts/samples/WalletAccountFactory.sol\":{\"keccak256\":\"0x925af6b2820f5a64cbed898e6d7611f3d9518e7b684331a96c91d67c5b8d0013\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5448e3293b33f1049532f167a62f240291ed2af1d39f769f94e82c75597c5283\",\"dweb:/ipfs/QmcU2Lebfnj7pgPq4FuKQnQu9hQ2HXMUqbJhHsZn73nghP\"]},\"project:/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162004f8938038062004f8983398181016040528101906100349190610124565b80604051610041906100a1565b61004b91906101b0565b604051809103906000f080158015610067573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101cb565b613eb680620010d383390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b60006100f1826100d4565b9050919050565b610101816100e6565b811461010c57600080fd5b50565b60008151905061011e816100f8565b92915050565b60006020828403121561013a576101396100af565b5b60006101488482850161010f565b91505092915050565b6000819050919050565b600061017661017161016c846100b4565b610151565b6100b4565b9050919050565b60006101888261015b565b9050919050565b600061019a8261017d565b9050919050565b6101aa8161018f565b82525050565b60006020820190506101c560008301846101a1565b92915050565b608051610edf620001f46000396000818160db0152818161014501526102360152610edf6000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b5780635fbfb9cf146200006d5780638cb84e1814620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b600480360381019062000085919062000483565b620000fd565b6040516200009a9190620003e1565b60405180910390f35b620000c16004803603810190620000bb919062000483565b62000204565b604051620000d09190620004db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806200010c848462000204565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200013f578192505050620001fe565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620001779190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620001ca9062000348565b620001d792919062000592565b8190604051809103906000f5905080158015620001f8573d6000803e3d6000fd5b50925050505b92915050565b6000620002fe8260001b60405180602001620002209062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620002689190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620002c092919062000592565b604051602081830303815290604052604051602001620002e292919062000608565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610879806200063183390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b600080fd5b6000620004108262000356565b9050919050565b620004228162000403565b81146200042e57600080fd5b50565b600081359050620004428162000417565b92915050565b6000819050919050565b6200045d8162000448565b81146200046957600080fd5b50565b6000813590506200047d8162000452565b92915050565b600080604083850312156200049d576200049c620003fe565b5b6000620004ad8582860162000431565b9250506020620004c0858286016200046c565b9150509250929050565b620004d58162000403565b82525050565b6000602082019050620004f26000830184620004ca565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200053457808201518184015260208101905062000517565b60008484015250505050565b6000601f19601f8301169050919050565b60006200055e82620004f8565b6200056a818562000503565b93506200057c81856020860162000514565b620005878162000540565b840191505092915050565b6000604082019050620005a96000830185620004ca565b8181036020830152620005bd818462000551565b90509392505050565b600081905092915050565b6000620005de82620004f8565b620005ea8185620005c6565b9350620005fc81856020860162000514565b80840191505092915050565b6000620006168285620005d1565b9150620006248284620005d1565b9150819050939250505056fe608060405260405161087938038061087983398181016040528101906100259190610520565b6100378282600061003e60201b60201c565b505061074f565b61004d8361007660201b60201c565b60008251118061005a5750805b156100715761006f83836100cb60201b60201c565b505b505050565b610085816100fe60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100f68383604051806060016040528060278152602001610852602791396101c360201b60201c565b905092915050565b61010d8161024f60201b60201c565b61014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105ff565b60405180910390fd5b8061017f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101ed9190610666565b600060405180830381855af49150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b50915091506102448683838761027c60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102e45760008351036102dc5761029c8561024f60201b60201c565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906106c9565b60405180910390fd5b5b8290506102f5565b6102f483836102fd60201b60201c565b5b949350505050565b6000825111156103105781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344919061072d565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038c82610361565b9050919050565b61039c81610381565b81146103a757600080fd5b50565b6000815190506103b981610393565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b600061044461034d565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b60005b838110156104a4578082015181840152602081019050610489565b60008484015250505050565b60006104c36104be84610455565b61043a565b9050828152602081018484840111156104df576104de6103c4565b5b6104ea848285610486565b509392505050565b600082601f830112610507576105066103bf565b5b81516105178482602086016104b0565b91505092915050565b6000806040838503121561053757610536610357565b5b6000610545858286016103aa565b925050602083015167ffffffffffffffff8111156105665761056561035c565b5b610572858286016104f2565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006105e9602d8361057c565b91506105f48261058d565b604082019050919050565b60006020820190508181036000830152610618816105dc565b9050919050565b600081519050919050565b600081905092915050565b60006106408261061f565b61064a818561062a565b935061065a818560208601610486565b80840191505092915050565b60006106728284610635565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006106b3601d8361057c565b91506106be8261067d565b602082019050919050565b600060208201905081810360008301526106e2816106a6565b9050919050565b600081519050919050565b60006106ff826106e9565b610709818561057c565b9350610719818560208601610486565b610722816103c9565b840191505092915050565b6000602082019050818103600083015261074781846106f4565b905092915050565b60f58061075d6000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e602c565b602a6026602e565b603b565b565b565b600060366060565b905090565b3660008037600080366000845af43d6000803e8060008114605b573d6000f35b3d6000fd5b6000608c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60b5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea26469706673582212204cc3794e60fa000b2ec6e629fb4f78d271719a1292043718b37f003dac08651864736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209e965e6e9c36f8e67df6eb1941056a7d868ebb900a22df8d826f8df6adac979d64736f6c6343000813003360c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b5060405162003eb638038062003eb683398181016040528101906200006a9190620001fa565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b5062000310565b600060019054906101000a900460ff161562000108576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ff90620002b3565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1610156200017a5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001719190620002f3565b60405180910390a15b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ae8262000181565b9050919050565b6000620001c282620001a1565b9050919050565b620001d481620001b5565b8114620001e057600080fd5b50565b600081519050620001f481620001c9565b92915050565b6000602082840312156200021357620002126200017c565b5b60006200022384828501620001e3565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200029b6027836200022c565b9150620002a8826200023d565b604082019050919050565b60006020820190508181036000830152620002ce816200028c565b9050919050565b600060ff82169050919050565b620002ed81620002d5565b82525050565b60006020820190506200030a6000830184620002e2565b92915050565b60805160a051613b5d6200035960003960008181610e560152611b01015260008181610819015281816108a701528181610be301528181610c710152610d210152613b5d6000f3fe6080604052600436106101695760003560e01c80638da5cb5b116100d1578063c399ec881161008a578063d595980411610064578063d5959804146104f2578063e22c4ac31461051b578063f23a6e6114610544578063fbb10ae61461058157610170565b8063c399ec8814610473578063c4d66de81461049e578063c7c8e4ed146104c757610170565b80638da5cb5b14610363578063affed0e01461038e578063b0d691fe146103b9578063b61d27f6146103e4578063bbedb64b1461040d578063bc197c811461043657610170565b80634a58db19116101235780634a58db19146102a75780634d44560d146102b15780634deafa38146102da5780634f1ef286146102f157806352d1902d1461030d57806368a9f31c1461033857610170565b806223de291461017557806301ffc9a71461019e578063150b7a02146101db57806318dfb3c7146102185780633659cfe6146102415780633a871cdd1461026a57610170565b3661017057005b600080fd5b34801561018157600080fd5b5061019c600480360381019061019791906122cf565b6105ac565b005b3480156101aa57600080fd5b506101c560048036038101906101c091906123f6565b6105b6565b6040516101d2919061243e565b60405180910390f35b3480156101e757600080fd5b5061020260048036038101906101fd9190612459565b6106f0565b60405161020f91906124f0565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a91906125b7565b610705565b005b34801561024d57600080fd5b5061026860048036038101906102639190612638565b610817565b005b34801561027657600080fd5b50610291600480360381019061028c91906126c0565b61099f565b60405161029e919061273e565b60405180910390f35b6102af6109e8565b005b3480156102bd57600080fd5b506102d860048036038101906102d39190612797565b610a5d565b005b3480156102e657600080fd5b506102ef610add565b005b61030b60048036038101906103069190612918565b610be1565b005b34801561031957600080fd5b50610322610d1d565b60405161032f9190612983565b60405180910390f35b34801561034457600080fd5b5061034d610dd6565b60405161035a91906129ad565b60405180910390f35b34801561036f57600080fd5b50610378610dfc565b60405161038591906129ad565b60405180910390f35b34801561039a57600080fd5b506103a3610e22565b6040516103b0919061273e565b60405180910390f35b3480156103c557600080fd5b506103ce610e52565b6040516103db9190612a27565b60405180910390f35b3480156103f057600080fd5b5061040b60048036038101906104069190612a42565b610e7a565b005b34801561041957600080fd5b50610434600480360381019061042f9190612638565b610ed7565b005b34801561044257600080fd5b5061045d60048036038101906104589190612b0c565b61100d565b60405161046a91906124f0565b60405180910390f35b34801561047f57600080fd5b50610488611025565b604051610495919061273e565b60405180910390f35b3480156104aa57600080fd5b506104c560048036038101906104c09190612638565b6110ad565b005b3480156104d357600080fd5b506104dc6111ed565b6040516104e991906129ad565b60405180910390f35b3480156104fe57600080fd5b5061051960048036038101906105149190612638565b611213565b005b34801561052757600080fd5b50610542600480360381019061053d9190612638565b61125f565b005b34801561055057600080fd5b5061056b60048036038101906105669190612be8565b6112ab565b60405161057891906124f0565b60405180910390f35b34801561058d57600080fd5b506105966112c1565b6040516105a391906129ad565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061068157507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106e957507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b905095945050505050565b61070d6112e7565b818190508484905014610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90612cdf565b60405180910390fd5b60005b84849050811015610810576107fd85858381811061077957610778612cff565b5b905060200201602081019061078e9190612638565b60008585858181106107a3576107a2612cff565b5b90506020028101906107b59190612d3d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506113b6565b808061080890612dcf565b915050610758565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90612e89565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108e461143a565b73ffffffffffffffffffffffffffffffffffffffff161461093a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093190612f1b565b60405180910390fd5b61094381611491565b61099c81600067ffffffffffffffff811115610962576109616127ed565b5b6040519080825280601f01601f1916602001820160405280156109945781602001600182028036833780820191505090505b50600061149c565b50565b60006109a961160a565b6109b38484611681565b905060008480604001906109c79190612d3d565b9050036109d8576109d7846117be565b5b6109e18261186c565b9392505050565b6109f0610e52565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610a2991906129ad565b6000604051808303818588803b158015610a4257600080fd5b505af1158015610a56573d6000803e3d6000fd5b5050505050565b610a65611908565b610a6d610e52565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610aa7929190612f4a565b600060405180830381600087803b158015610ac157600080fd5b505af1158015610ad5573d6000803e3d6000fd5b505050505050565b610ae56119d0565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6d90612fbf565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610bde573d6000803e3d6000fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690612e89565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cae61143a565b73ffffffffffffffffffffffffffffffffffffffff1614610d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfb90612f1b565b60405180910390fd5b610d0d82611491565b610d198282600161149c565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610dad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da490613051565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610e826112e7565b610ed1848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506113b6565b50505050565b610edf611908565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f67906130bd565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd9f7b34fba24e4e88ecc6055d049d20c4d176247db160d2ae43340c7e17c73ac600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161100291906129ad565b60405180910390a150565b600063bc197c8160e01b905098975050505050505050565b600061102f610e52565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161106791906129ad565b602060405180830381865afa158015611084573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a891906130f2565b905090565b60008060019054906101000a900460ff161590508080156110de5750600160008054906101000a900460ff1660ff16105b8061110b57506110ed30611a62565b15801561110a5750600160008054906101000a900460ff1660ff16145b5b61114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114190613191565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611187576001600060016101000a81548160ff0219169083151502179055505b61119082611a85565b80156111e95760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516111e091906131f9565b60405180910390a15b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61121b611b65565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611267611b65565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600063f23a6e6160e01b90509695505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112ef610e52565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061137557506001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90613260565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516113df91906132f1565b60006040518083038185875af1925050503d806000811461141c576040519150601f19603f3d011682016040523d82523d6000602084013e611421565b606091505b50915091508161143357805160208201fd5b5050505050565b60006114687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611c12565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611499611908565b50565b6114c87f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611c1c565b60000160009054906101000a900460ff16156114ec576114e783611c26565b611605565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561155457506040513d601f19601f82011682018060405250810190611551919061331d565b60015b611593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158a906133bc565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146115f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ef9061344e565b60405180910390fd5b50611604838383611cdf565b5b505050565b611612610e52565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461167f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611676906134ba565b60405180910390fd5b565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117b35760006116e383611d0b565b905061174b848061014001906116f99190612d3d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505082611d3b90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff166001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117a95760019150506117b8565b60009150506117b8565b600090505b92915050565b80602001356001600081819054906101000a90046bffffffffffffffffffffffff16809291906117ed906134f2565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff1614611869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186090613572565b60405180910390fd5b50565b600081146119055760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516118bc906135b8565b600060405180830381858888f193505050503d80600081146118fa576040519150601f19603f3d011682016040523d82523d6000602084013e6118ff565b606091505b50509050505b50565b6001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061198f57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6119ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c590613619565b60405180910390fd5b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5790613685565b60405180910390fd5b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b806001600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de60405160405180910390a350565b611b6d610e52565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611bd157503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c07906136f1565b60405180910390fd5b565b6000819050919050565b6000819050919050565b611c2f81611a62565b611c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6590613783565b60405180910390fd5b80611c9b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611c12565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611ce883611d62565b600082511180611cf55750805b15611d0657611d048383611db1565b505b505050565b600081604051602001611d1e919061381b565b604051602081830303815290604052805190602001209050919050565b6000806000611d4a8585611dde565b91509150611d5781611e2f565b819250505092915050565b611d6b81611c26565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611dd68383604051806060016040528060278152602001613b0160279139611f95565b905092915050565b6000806041835103611e1f5760008060006020860151925060408601519150606086015160001a9050611e138782858561201b565b94509450505050611e28565b60006002915091505b9250929050565b60006004811115611e4357611e42613841565b5b816004811115611e5657611e55613841565b5b0315611f925760016004811115611e7057611e6f613841565b5b816004811115611e8357611e82613841565b5b03611ec3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eba906138bc565b60405180910390fd5b60026004811115611ed757611ed6613841565b5b816004811115611eea57611ee9613841565b5b03611f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2190613928565b60405180910390fd5b60036004811115611f3e57611f3d613841565b5b816004811115611f5157611f50613841565b5b03611f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f88906139ba565b60405180910390fd5b5b50565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611fbf91906132f1565b600060405180830381855af49150503d8060008114611ffa576040519150601f19603f3d011682016040523d82523d6000602084013e611fff565b606091505b5091509150612010868383876120fd565b925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156120565760006003915091506120f4565b60006001878787876040516000815260200160405260405161207b94939291906139e9565b6020604051602081039080840390855afa15801561209d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120eb576000600192509250506120f4565b80600092509250505b94509492505050565b6060831561215f5760008351036121575761211785611a62565b612156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214d90613a7a565b60405180910390fd5b5b82905061216a565b6121698383612172565b5b949350505050565b6000825111156121855781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b99190613ade565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612201826121d6565b9050919050565b612211816121f6565b811461221c57600080fd5b50565b60008135905061222e81612208565b92915050565b6000819050919050565b61224781612234565b811461225257600080fd5b50565b6000813590506122648161223e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261228f5761228e61226a565b5b8235905067ffffffffffffffff8111156122ac576122ab61226f565b5b6020830191508360018202830111156122c8576122c7612274565b5b9250929050565b60008060008060008060008060c0898b0312156122ef576122ee6121cc565b5b60006122fd8b828c0161221f565b985050602061230e8b828c0161221f565b975050604061231f8b828c0161221f565b96505060606123308b828c01612255565b955050608089013567ffffffffffffffff811115612351576123506121d1565b5b61235d8b828c01612279565b945094505060a089013567ffffffffffffffff8111156123805761237f6121d1565b5b61238c8b828c01612279565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123d38161239e565b81146123de57600080fd5b50565b6000813590506123f0816123ca565b92915050565b60006020828403121561240c5761240b6121cc565b5b600061241a848285016123e1565b91505092915050565b60008115159050919050565b61243881612423565b82525050565b6000602082019050612453600083018461242f565b92915050565b600080600080600060808688031215612475576124746121cc565b5b60006124838882890161221f565b95505060206124948882890161221f565b94505060406124a588828901612255565b935050606086013567ffffffffffffffff8111156124c6576124c56121d1565b5b6124d288828901612279565b92509250509295509295909350565b6124ea8161239e565b82525050565b600060208201905061250560008301846124e1565b92915050565b60008083601f8401126125215761252061226a565b5b8235905067ffffffffffffffff81111561253e5761253d61226f565b5b60208301915083602082028301111561255a57612559612274565b5b9250929050565b60008083601f8401126125775761257661226a565b5b8235905067ffffffffffffffff8111156125945761259361226f565b5b6020830191508360208202830111156125b0576125af612274565b5b9250929050565b600080600080604085870312156125d1576125d06121cc565b5b600085013567ffffffffffffffff8111156125ef576125ee6121d1565b5b6125fb8782880161250b565b9450945050602085013567ffffffffffffffff81111561261e5761261d6121d1565b5b61262a87828801612561565b925092505092959194509250565b60006020828403121561264e5761264d6121cc565b5b600061265c8482850161221f565b91505092915050565b600080fd5b6000610160828403121561268157612680612665565b5b81905092915050565b6000819050919050565b61269d8161268a565b81146126a857600080fd5b50565b6000813590506126ba81612694565b92915050565b6000806000606084860312156126d9576126d86121cc565b5b600084013567ffffffffffffffff8111156126f7576126f66121d1565b5b6127038682870161266a565b9350506020612714868287016126ab565b925050604061272586828701612255565b9150509250925092565b61273881612234565b82525050565b6000602082019050612753600083018461272f565b92915050565b6000612764826121d6565b9050919050565b61277481612759565b811461277f57600080fd5b50565b6000813590506127918161276b565b92915050565b600080604083850312156127ae576127ad6121cc565b5b60006127bc85828601612782565b92505060206127cd85828601612255565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612825826127dc565b810181811067ffffffffffffffff82111715612844576128436127ed565b5b80604052505050565b60006128576121c2565b9050612863828261281c565b919050565b600067ffffffffffffffff821115612883576128826127ed565b5b61288c826127dc565b9050602081019050919050565b82818337600083830152505050565b60006128bb6128b684612868565b61284d565b9050828152602081018484840111156128d7576128d66127d7565b5b6128e2848285612899565b509392505050565b600082601f8301126128ff576128fe61226a565b5b813561290f8482602086016128a8565b91505092915050565b6000806040838503121561292f5761292e6121cc565b5b600061293d8582860161221f565b925050602083013567ffffffffffffffff81111561295e5761295d6121d1565b5b61296a858286016128ea565b9150509250929050565b61297d8161268a565b82525050565b60006020820190506129986000830184612974565b92915050565b6129a7816121f6565b82525050565b60006020820190506129c2600083018461299e565b92915050565b6000819050919050565b60006129ed6129e86129e3846121d6565b6129c8565b6121d6565b9050919050565b60006129ff826129d2565b9050919050565b6000612a11826129f4565b9050919050565b612a2181612a06565b82525050565b6000602082019050612a3c6000830184612a18565b92915050565b60008060008060608587031215612a5c57612a5b6121cc565b5b6000612a6a8782880161221f565b9450506020612a7b87828801612255565b935050604085013567ffffffffffffffff811115612a9c57612a9b6121d1565b5b612aa887828801612279565b925092505092959194509250565b60008083601f840112612acc57612acb61226a565b5b8235905067ffffffffffffffff811115612ae957612ae861226f565b5b602083019150836020820283011115612b0557612b04612274565b5b9250929050565b60008060008060008060008060a0898b031215612b2c57612b2b6121cc565b5b6000612b3a8b828c0161221f565b9850506020612b4b8b828c0161221f565b975050604089013567ffffffffffffffff811115612b6c57612b6b6121d1565b5b612b788b828c01612ab6565b9650965050606089013567ffffffffffffffff811115612b9b57612b9a6121d1565b5b612ba78b828c01612ab6565b9450945050608089013567ffffffffffffffff811115612bca57612bc96121d1565b5b612bd68b828c01612279565b92509250509295985092959890939650565b60008060008060008060a08789031215612c0557612c046121cc565b5b6000612c1389828a0161221f565b9650506020612c2489828a0161221f565b9550506040612c3589828a01612255565b9450506060612c4689828a01612255565b935050608087013567ffffffffffffffff811115612c6757612c666121d1565b5b612c7389828a01612279565b92509250509295509295509295565b600082825260208201905092915050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b6000612cc9601383612c82565b9150612cd482612c93565b602082019050919050565b60006020820190508181036000830152612cf881612cbc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612d5a57612d59612d2e565b5b80840192508235915067ffffffffffffffff821115612d7c57612d7b612d33565b5b602083019250600182023603831315612d9857612d97612d38565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612dda82612234565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e0c57612e0b612da0565b5b600182019050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000612e73602c83612c82565b9150612e7e82612e17565b604082019050919050565b60006020820190508181036000830152612ea281612e66565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000612f05602c83612c82565b9150612f1082612ea9565b604082019050919050565b60006020820190508181036000830152612f3481612ef8565b9050919050565b612f4481612759565b82525050565b6000604082019050612f5f6000830185612f3b565b612f6c602083018461272f565b9392505050565b7f657363617065206973206e6f7420736574000000000000000000000000000000600082015250565b6000612fa9601183612c82565b9150612fb482612f73565b602082019050919050565b60006020820190508181036000830152612fd881612f9c565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b600061303b603883612c82565b915061304682612fdf565b604082019050919050565b6000602082019050818103600083015261306a8161302e565b9050919050565b7f7365636f6e644f776e657220616c726561647920736574000000000000000000600082015250565b60006130a7601783612c82565b91506130b282613071565b602082019050919050565b600060208201905081810360008301526130d68161309a565b9050919050565b6000815190506130ec8161223e565b92915050565b600060208284031215613108576131076121cc565b5b6000613116848285016130dd565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061317b602e83612c82565b91506131868261311f565b604082019050919050565b600060208201905081810360008301526131aa8161316e565b9050919050565b6000819050919050565b600060ff82169050919050565b60006131e36131de6131d9846131b1565b6129c8565b6131bb565b9050919050565b6131f3816131c8565b82525050565b600060208201905061320e60008301846131ea565b92915050565b7f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74600082015250565b600061324a602083612c82565b915061325582613214565b602082019050919050565b600060208201905081810360008301526132798161323d565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156132b4578082015181840152602081019050613299565b60008484015250505050565b60006132cb82613280565b6132d5818561328b565b93506132e5818560208601613296565b80840191505092915050565b60006132fd82846132c0565b915081905092915050565b60008151905061331781612694565b92915050565b600060208284031215613333576133326121cc565b5b600061334184828501613308565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b60006133a6602e83612c82565b91506133b18261334a565b604082019050919050565b600060208201905081810360008301526133d581613399565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000613438602983612c82565b9150613443826133dc565b604082019050919050565b600060208201905081810360008301526134678161342b565b9050919050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b60006134a4601c83612c82565b91506134af8261346e565b602082019050919050565b600060208201905081810360008301526134d381613497565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b60006134fd826134da565b91506bffffffffffffffffffffffff820361351b5761351a612da0565b5b600182019050919050565b7f6163636f756e743a20696e76616c6964206e6f6e636500000000000000000000600082015250565b600061355c601683612c82565b915061356782613526565b602082019050919050565b6000602082019050818103600083015261358b8161354f565b9050919050565b50565b60006135a260008361328b565b91506135ad82613592565b600082019050919050565b60006135c382613595565b9150819050919050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000613603600a83612c82565b915061360e826135cd565b602082019050919050565b60006020820190508181036000830152613632816135f6565b9050919050565b7f6f6e6c7920504b50000000000000000000000000000000000000000000000000600082015250565b600061366f600883612c82565b915061367a82613639565b602082019050919050565b6000602082019050818103600083015261369e81613662565b9050919050565b7f6163636f756e743a206e6f742074686973206f7220456e747279506f696e7400600082015250565b60006136db601f83612c82565b91506136e6826136a5565b602082019050919050565b6000602082019050818103600083015261370a816136ce565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061376d602d83612c82565b915061377882613711565b604082019050919050565b6000602082019050818103600083015261379c81613760565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006137e4601c836137a3565b91506137ef826137ae565b601c82019050919050565b6000819050919050565b6138156138108261268a565b6137fa565b82525050565b6000613826826137d7565b91506138328284613804565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006138a6601883612c82565b91506138b182613870565b602082019050919050565b600060208201905081810360008301526138d581613899565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613912601f83612c82565b915061391d826138dc565b602082019050919050565b6000602082019050818103600083015261394181613905565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006139a4602283612c82565b91506139af82613948565b604082019050919050565b600060208201905081810360008301526139d381613997565b9050919050565b6139e3816131bb565b82525050565b60006080820190506139fe6000830187612974565b613a0b60208301866139da565b613a186040830185612974565b613a256060830184612974565b95945050505050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613a64601d83612c82565b9150613a6f82613a2e565b602082019050919050565b60006020820190508181036000830152613a9381613a57565b9050919050565b600081519050919050565b6000613ab082613a9a565b613aba8185612c82565b9350613aca818560208601613296565b613ad3816127dc565b840191505092915050565b60006020820190508181036000830152613af88184613aa5565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203183d76f64b62a11bd526a5cabfef4cc4f4af4c81b092c101f567e8c38c452ce64736f6c63430008130033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b5780635fbfb9cf146200006d5780638cb84e1814620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b600480360381019062000085919062000483565b620000fd565b6040516200009a9190620003e1565b60405180910390f35b620000c16004803603810190620000bb919062000483565b62000204565b604051620000d09190620004db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806200010c848462000204565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200013f578192505050620001fe565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620001779190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620001ca9062000348565b620001d792919062000592565b8190604051809103906000f5905080158015620001f8573d6000803e3d6000fd5b50925050505b92915050565b6000620002fe8260001b60405180602001620002209062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620002689190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620002c092919062000592565b604051602081830303815290604052604051602001620002e292919062000608565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610879806200063183390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b600080fd5b6000620004108262000356565b9050919050565b620004228162000403565b81146200042e57600080fd5b50565b600081359050620004428162000417565b92915050565b6000819050919050565b6200045d8162000448565b81146200046957600080fd5b50565b6000813590506200047d8162000452565b92915050565b600080604083850312156200049d576200049c620003fe565b5b6000620004ad8582860162000431565b9250506020620004c0858286016200046c565b9150509250929050565b620004d58162000403565b82525050565b6000602082019050620004f26000830184620004ca565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200053457808201518184015260208101905062000517565b60008484015250505050565b6000601f19601f8301169050919050565b60006200055e82620004f8565b6200056a818562000503565b93506200057c81856020860162000514565b620005878162000540565b840191505092915050565b6000604082019050620005a96000830185620004ca565b8181036020830152620005bd818462000551565b90509392505050565b600081905092915050565b6000620005de82620004f8565b620005ea8185620005c6565b9350620005fc81856020860162000514565b80840191505092915050565b6000620006168285620005d1565b9150620006248284620005d1565b9150819050939250505056fe608060405260405161087938038061087983398181016040528101906100259190610520565b6100378282600061003e60201b60201c565b505061074f565b61004d8361007660201b60201c565b60008251118061005a5750805b156100715761006f83836100cb60201b60201c565b505b505050565b610085816100fe60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100f68383604051806060016040528060278152602001610852602791396101c360201b60201c565b905092915050565b61010d8161024f60201b60201c565b61014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105ff565b60405180910390fd5b8061017f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101ed9190610666565b600060405180830381855af49150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b50915091506102448683838761027c60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102e45760008351036102dc5761029c8561024f60201b60201c565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906106c9565b60405180910390fd5b5b8290506102f5565b6102f483836102fd60201b60201c565b5b949350505050565b6000825111156103105781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344919061072d565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038c82610361565b9050919050565b61039c81610381565b81146103a757600080fd5b50565b6000815190506103b981610393565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b600061044461034d565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b60005b838110156104a4578082015181840152602081019050610489565b60008484015250505050565b60006104c36104be84610455565b61043a565b9050828152602081018484840111156104df576104de6103c4565b5b6104ea848285610486565b509392505050565b600082601f830112610507576105066103bf565b5b81516105178482602086016104b0565b91505092915050565b6000806040838503121561053757610536610357565b5b6000610545858286016103aa565b925050602083015167ffffffffffffffff8111156105665761056561035c565b5b610572858286016104f2565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006105e9602d8361057c565b91506105f48261058d565b604082019050919050565b60006020820190508181036000830152610618816105dc565b9050919050565b600081519050919050565b600081905092915050565b60006106408261061f565b61064a818561062a565b935061065a818560208601610486565b80840191505092915050565b60006106728284610635565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006106b3601d8361057c565b91506106be8261067d565b602082019050919050565b600060208201905081810360008301526106e2816106a6565b9050919050565b600081519050919050565b60006106ff826106e9565b610709818561057c565b9350610719818560208601610486565b610722816103c9565b840191505092915050565b6000602082019050818103600083015261074781846106f4565b905092915050565b60f58061075d6000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e602c565b602a6026602e565b603b565b565b565b600060366060565b905090565b3660008037600080366000845af43d6000803e8060008114605b573d6000f35b3d6000fd5b6000608c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60b5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea26469706673582212204cc3794e60fa000b2ec6e629fb4f78d271719a1292043718b37f003dac08651864736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209e965e6e9c36f8e67df6eb1941056a7d868ebb900a22df8d826f8df6adac979d64736f6c63430008130033",
  "immutableReferences": {
    "12373": [
      {
        "length": 32,
        "start": 219
      },
      {
        "length": 32,
        "start": 325
      },
      {
        "length": 32,
        "start": 566
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2396:100",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:100",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:100"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:100"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:100",
                "type": ""
              }
            ],
            "src": "7:75:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:100",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:100",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:100"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:100",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:100",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:100"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:100",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:100"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:100"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:100",
                "type": ""
              }
            ],
            "src": "334:126:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:100"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:100"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:100",
                "type": ""
              }
            ],
            "src": "466:96:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "634:51:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "644:35:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "673:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "655:17:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:24:100"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "644:7:100"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IEntryPoint_$10154",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "616:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "626:7:100",
                "type": ""
              }
            ],
            "src": "568:117:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:100:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "833:16:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:100",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:100",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "835:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "835:12:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "835:12:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "778:5:100"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "824:5:100"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IEntryPoint_$10154",
                              "nodeType": "YulIdentifier",
                              "src": "785:38:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "785:45:100"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "775:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:56:100"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:64:100"
                  },
                  "nodeType": "YulIf",
                  "src": "765:84:100"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IEntryPoint_$10154",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "748:5:100",
                "type": ""
              }
            ],
            "src": "691:164:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "945:101:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "955:22:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "970:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "964:5:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:13:100"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "955:5:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1034:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IEntryPoint_$10154",
                      "nodeType": "YulIdentifier",
                      "src": "986:47:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:54:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "986:54:100"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IEntryPoint_$10154_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "923:6:100",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "931:3:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "939:5:100",
                "type": ""
              }
            ],
            "src": "861:185:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1150:295:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1196:83:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1198:77:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1198:79:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1198:79:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:100"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1180:9:100"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:23:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1192:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1163:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1163:32:100"
                  },
                  "nodeType": "YulIf",
                  "src": "1160:119:100"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1289:149:100",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1304:15:100",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1318:1:100",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1308:6:100",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1333:95:100",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1400:9:100"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1411:6:100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1396:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1396:22:100"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1420:7:100"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IEntryPoint_$10154_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1343:52:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1343:85:100"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1333:6:100"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IEntryPoint_$10154_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1120:9:100",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1131:7:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1143:6:100",
                "type": ""
              }
            ],
            "src": "1052:393:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1483:28:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1493:12:100",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1500:5:100"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1493:3:100"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1479:3:100",
                "type": ""
              }
            ],
            "src": "1451:60:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1577:82:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1587:66:100",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1645:5:100"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1627:17:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1627:24:100"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1618:8:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1618:34:100"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1600:17:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1600:53:100"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1587:9:100"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1557:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1567:9:100",
                "type": ""
              }
            ],
            "src": "1517:142:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1725:66:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1735:50:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1779:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1748:30:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:37:100"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1735:9:100"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1705:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1715:9:100",
                "type": ""
              }
            ],
            "src": "1665:126:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1878:66:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:50:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1932:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1901:30:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:37:100"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1888:9:100"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IEntryPoint_$10154_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1858:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1868:9:100",
                "type": ""
              }
            ],
            "src": "1797:147:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2036:87:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2053:3:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2110:5:100"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IEntryPoint_$10154_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2058:51:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2058:58:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2046:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2046:71:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2046:71:100"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IEntryPoint_$10154_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2024:5:100",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2031:3:100",
                "type": ""
              }
            ],
            "src": "1950:173:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2248:145:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2258:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2270:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2266:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2258:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2359:6:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2372:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2383:1:100",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2368:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2368:17:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IEntryPoint_$10154_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2294:64:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:92:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:92:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IEntryPoint_$10154__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2220:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2232:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2243:4:100",
                "type": ""
              }
            ],
            "src": "2129:264:100"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$10154(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$10154(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$10154(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$10154_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$10154(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$10154_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$10154_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$10154_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$10154_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$10154_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$10154__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$10154_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 100,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5460:100",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:100",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:100"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:100"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:100",
                "type": ""
              }
            ],
            "src": "7:126:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:100",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:100"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:100"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:100",
                "type": ""
              }
            ],
            "src": "139:60:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:100",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:100"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:100"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:100"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:100"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:100"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:100",
                "type": ""
              }
            ],
            "src": "205:142:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "421:66:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "431:50:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "475:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "444:30:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:37:100"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "431:9:100"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "401:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "411:9:100",
                "type": ""
              }
            ],
            "src": "353:134:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "584:74:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "594:58:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "646:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "607:38:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:45:100"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "594:9:100"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_WalletAccount_$12364_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "564:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "574:9:100",
                "type": ""
              }
            ],
            "src": "493:165:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "760:97:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "777:3:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "844:5:100"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_WalletAccount_$12364_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "782:61:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "782:68:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "770:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:81:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "770:81:100"
                }
              ]
            },
            "name": "abi_encode_t_contract$_WalletAccount_$12364_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "748:5:100",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "755:3:100",
                "type": ""
              }
            ],
            "src": "664:193:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "992:155:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1002:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1014:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1025:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1010:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1002:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1113:6:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1126:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1137:1:100",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1122:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1122:17:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_WalletAccount_$12364_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1038:74:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:102:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1038:102:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_WalletAccount_$12364__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "964:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "976:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "987:4:100",
                "type": ""
              }
            ],
            "src": "863:284:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:35:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1203:19:100",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1219:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1213:5:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:9:100"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1203:6:100"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1186:6:100",
                "type": ""
              }
            ],
            "src": "1153:75:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1323:28:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1340:1:100",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1343:1:100",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1333:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1333:12:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1333:12:100"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1234:117:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1446:28:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:1:100",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1466:1:100",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1456:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1456:12:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1456:12:100"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1357:117:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1525:51:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1535:35:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1564:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1546:17:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:24:100"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1535:7:100"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1507:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1517:7:100",
                "type": ""
              }
            ],
            "src": "1480:96:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1625:79:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1682:16:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1691:1:100",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1694:1:100",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1684:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1684:12:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1684:12:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1648:5:100"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1673:5:100"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1655:17:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1655:24:100"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1645:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1645:35:100"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1638:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:43:100"
                  },
                  "nodeType": "YulIf",
                  "src": "1635:63:100"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1618:5:100",
                "type": ""
              }
            ],
            "src": "1582:122:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1762:87:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1772:29:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1794:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1781:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1781:20:100"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1772:5:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1837:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1810:26:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:33:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1810:33:100"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1740:6:100",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1748:3:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1756:5:100",
                "type": ""
              }
            ],
            "src": "1710:139:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1900:32:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1910:16:100",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1921:5:100"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1910:7:100"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1882:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1892:7:100",
                "type": ""
              }
            ],
            "src": "1855:77:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1981:79:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2038:16:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2047:1:100",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:100",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2040:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2040:12:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2040:12:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2004:5:100"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2029:5:100"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2011:17:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2011:24:100"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2001:2:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:35:100"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1994:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:43:100"
                  },
                  "nodeType": "YulIf",
                  "src": "1991:63:100"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1974:5:100",
                "type": ""
              }
            ],
            "src": "1938:122:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2118:87:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2128:29:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2150:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2137:12:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:20:100"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2128:5:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2193:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2166:26:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2166:33:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2166:33:100"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2096:6:100",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2104:3:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2112:5:100",
                "type": ""
              }
            ],
            "src": "2066:139:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2294:391:100",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2340:83:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2342:77:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2342:79:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2342:79:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2315:7:100"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2324:9:100"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2311:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2311:23:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2336:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2307:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:32:100"
                  },
                  "nodeType": "YulIf",
                  "src": "2304:119:100"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2433:117:100",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2448:15:100",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2462:1:100",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2452:6:100",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2477:63:100",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2512:9:100"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2523:6:100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2508:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2508:22:100"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2532:7:100"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2487:20:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2487:53:100"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2477:6:100"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2560:118:100",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2575:16:100",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2589:2:100",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2579:6:100",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2605:63:100",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2640:9:100"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2651:6:100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2636:3:100"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2636:22:100"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2660:7:100"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2615:20:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2615:53:100"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2605:6:100"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2256:9:100",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2267:7:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2279:6:100",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2287:6:100",
                "type": ""
              }
            ],
            "src": "2211:474:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2756:53:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2773:3:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2796:5:100"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2778:17:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2778:24:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2766:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2766:37:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2766:37:100"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2744:5:100",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2751:3:100",
                "type": ""
              }
            ],
            "src": "2691:118:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2913:124:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2923:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2935:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2946:2:100",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2931:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2931:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2923:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3003:6:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3016:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3027:1:100",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3012:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3012:17:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2959:43:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2959:71:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2959:71:100"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2885:9:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2897:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2908:4:100",
                "type": ""
              }
            ],
            "src": "2815:222:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3101:40:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3112:22:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3128:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3122:5:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3122:12:100"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3112:6:100"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3084:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3094:6:100",
                "type": ""
              }
            ],
            "src": "3043:98:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3242:73:100",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3259:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3264:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3252:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3252:19:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3252:19:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3280:29:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3299:3:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3304:4:100",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3295:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3295:14:100"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3280:11:100"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3214:3:100",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3219:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3230:11:100",
                "type": ""
              }
            ],
            "src": "3147:168:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3383:184:100",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3393:10:100",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3402:1:100",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3397:1:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3462:63:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3487:3:100"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3492:1:100"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3483:3:100"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3483:11:100"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3506:3:100"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3511:1:100"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3502:3:100"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3502:11:100"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3496:5:100"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3496:18:100"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3476:6:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3476:39:100"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3476:39:100"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3423:1:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3426:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3420:2:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3420:13:100"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3434:19:100",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3436:15:100",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3445:1:100"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3448:2:100",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3441:3:100"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3441:10:100"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3436:1:100"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3416:3:100",
                    "statements": []
                  },
                  "src": "3412:113:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3545:3:100"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3550:6:100"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3541:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3541:16:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3559:1:100",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3534:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3534:27:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3534:27:100"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3365:3:100",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3370:3:100",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3375:6:100",
                "type": ""
              }
            ],
            "src": "3321:246:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3621:54:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3631:38:100",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3649:5:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3656:2:100",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3645:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3645:14:100"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3665:2:100",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3661:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3661:7:100"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3641:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:28:100"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3631:6:100"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3604:5:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3614:6:100",
                "type": ""
              }
            ],
            "src": "3573:102:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3771:283:100",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3781:52:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3827:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3795:31:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3795:38:100"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3785:6:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3842:77:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3907:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3912:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3849:57:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3849:70:100"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3842:3:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3967:5:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3974:4:100",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3963:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3963:16:100"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3981:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3986:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3928:34:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3928:65:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3928:65:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4002:46:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4013:3:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4040:6:100"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4018:21:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:29:100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4009:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:39:100"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4002:3:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3752:5:100",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3759:3:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3767:3:100",
                "type": ""
              }
            ],
            "src": "3681:373:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4204:275:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4214:26:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4226:9:100"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4237:2:100",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4222:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:18:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4214:4:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4294:6:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4307:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4318:1:100",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4303:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4303:17:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4250:43:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4250:71:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4250:71:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4342:9:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4353:2:100",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4338:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4338:18:100"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4362:4:100"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4368:9:100"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4358:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4358:20:100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4331:6:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4331:48:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4331:48:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4388:84:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4458:6:100"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4467:4:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4396:61:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:76:100"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4388:4:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4168:9:100",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4180:6:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4188:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4199:4:100",
                "type": ""
              }
            ],
            "src": "4060:419:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4598:34:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4608:18:100",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4623:3:100"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4608:11:100"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4570:3:100",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4575:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4586:11:100",
                "type": ""
              }
            ],
            "src": "4485:147:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4746:278:100",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4756:52:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4802:5:100"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4770:31:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4770:38:100"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4760:6:100",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4817:95:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4900:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4905:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4824:75:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4824:88:100"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4817:3:100"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4960:5:100"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4967:4:100",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4956:3:100"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4956:16:100"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4974:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4979:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "4921:34:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4921:65:100"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4921:65:100"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4995:23:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5006:3:100"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5011:6:100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5002:3:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5002:16:100"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4995:3:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4727:5:100",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4734:3:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4742:3:100",
                "type": ""
              }
            ],
            "src": "4638:386:100"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5210:247:100",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5221:100:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5308:6:100"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5317:3:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5228:79:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5228:93:100"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5221:3:100"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5331:100:100",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5418:6:100"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5427:3:100"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5338:79:100"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:93:100"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5331:3:100"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5441:10:100",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5448:3:100"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5441:3:100"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5181:3:100",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5187:6:100",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5195:6:100",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5206:3:100",
                "type": ""
              }
            ],
            "src": "5030:427:100"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_WalletAccount_$12364_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_WalletAccount_$12364_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_WalletAccount_$12364_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_WalletAccount_$12364__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_WalletAccount_$12364_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
      "id": 100,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "599:1587:69:-:0;;;694:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;783:11;765:30;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;741:54;;;;;;;;;;694:108;599:1587;;;;;;;;;;:::o;88:117:100:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:117::-;626:7;655:24;673:5;655:24;:::i;:::-;644:35;;568:117;;;:::o;691:164::-;785:45;824:5;785:45;:::i;:::-;778:5;775:56;765:84;;845:1;842;835:12;765:84;691:164;:::o;861:185::-;939:5;970:6;964:13;955:22;;986:54;1034:5;986:54;:::i;:::-;861:185;;;;:::o;1052:393::-;1143:6;1192:2;1180:9;1171:7;1167:23;1163:32;1160:119;;;1198:79;;:::i;:::-;1160:119;1318:1;1343:85;1420:7;1411:6;1400:9;1396:22;1343:85;:::i;:::-;1333:95;;1289:149;1052:393;;;;:::o;1451:60::-;1479:3;1500:5;1493:12;;1451:60;;;:::o;1517:142::-;1567:9;1600:53;1618:34;1627:24;1645:5;1627:24;:::i;:::-;1618:34;:::i;:::-;1600:53;:::i;:::-;1587:66;;1517:142;;;:::o;1665:126::-;1715:9;1748:37;1779:5;1748:37;:::i;:::-;1735:50;;1665:126;;;:::o;1797:147::-;1868:9;1901:37;1932:5;1901:37;:::i;:::-;1888:50;;1797:147;;;:::o;1950:173::-;2058:58;2110:5;2058:58;:::i;:::-;2053:3;2046:71;1950:173;;:::o;2129:264::-;2243:4;2281:2;2270:9;2266:18;2258:26;;2294:92;2383:1;2372:9;2368:17;2359:6;2294:92;:::i;:::-;2129:264;;;;:::o;599:1587:69:-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "599:1587:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1182:477;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1784:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:52;;;:::o;1182:477::-;1249:17;1278:12;1293:23;1304:5;1311:4;1293:10;:23::i;:::-;1278:38;;1326:13;1342:4;:16;;;1326:32;;1383:1;1372:8;:12;1368:78;;;1429:4;1400:35;;;;;;1368:78;1515:4;1507:13;;1547:21;1629:5;1587:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:167;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:197;;1268:391;;1182:477;;;;;:::o;1784:400::-;1853:7;1879:298;1910:4;1902:13;;1961:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2050:21;2136:5;2094:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2010:151;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1927:248;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1917:259;;;;;;1879:22;:298::i;:::-;1872:305;;1784:400;;;;:::o;1799:165:44:-;1882:7;1908:49;1923:4;1929:12;1951:4;1908:14;:49::i;:::-;1901:56;;1799:165;;;;:::o;2207:1802::-;2338:12;2445:4;2439:11;3664:12;3657:4;3652:3;3648:14;3641:36;3713:4;3706;3701:3;3697:14;3690:28;3743:8;3738:3;3731:21;3836:4;3831:3;3827:14;3947:4;3940:5;3932:20;3990:2;3983:5;3973:20;3965:28;;2414:1589;;2207:1802;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:100:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:134::-;411:9;444:37;475:5;444:37;:::i;:::-;431:50;;353:134;;;:::o;493:165::-;574:9;607:45;646:5;607:45;:::i;:::-;594:58;;493:165;;;:::o;664:193::-;782:68;844:5;782:68;:::i;:::-;777:3;770:81;664:193;;:::o;863:284::-;987:4;1025:2;1014:9;1010:18;1002:26;;1038:102;1137:1;1126:9;1122:17;1113:6;1038:102;:::i;:::-;863:284;;;;:::o;1234:117::-;1343:1;1340;1333:12;1480:96;1517:7;1546:24;1564:5;1546:24;:::i;:::-;1535:35;;1480:96;;;:::o;1582:122::-;1655:24;1673:5;1655:24;:::i;:::-;1648:5;1645:35;1635:63;;1694:1;1691;1684:12;1635:63;1582:122;:::o;1710:139::-;1756:5;1794:6;1781:20;1772:29;;1810:33;1837:5;1810:33;:::i;:::-;1710:139;;;;:::o;1855:77::-;1892:7;1921:5;1910:16;;1855:77;;;:::o;1938:122::-;2011:24;2029:5;2011:24;:::i;:::-;2004:5;2001:35;1991:63;;2050:1;2047;2040:12;1991:63;1938:122;:::o;2066:139::-;2112:5;2150:6;2137:20;2128:29;;2166:33;2193:5;2166:33;:::i;:::-;2066:139;;;;:::o;2211:474::-;2279:6;2287;2336:2;2324:9;2315:7;2311:23;2307:32;2304:119;;;2342:79;;:::i;:::-;2304:119;2462:1;2487:53;2532:7;2523:6;2512:9;2508:22;2487:53;:::i;:::-;2477:63;;2433:117;2589:2;2615:53;2660:7;2651:6;2640:9;2636:22;2615:53;:::i;:::-;2605:63;;2560:118;2211:474;;;;;:::o;2691:118::-;2778:24;2796:5;2778:24;:::i;:::-;2773:3;2766:37;2691:118;;:::o;2815:222::-;2908:4;2946:2;2935:9;2931:18;2923:26;;2959:71;3027:1;3016:9;3012:17;3003:6;2959:71;:::i;:::-;2815:222;;;;:::o;3043:98::-;3094:6;3128:5;3122:12;3112:22;;3043:98;;;:::o;3147:168::-;3230:11;3264:6;3259:3;3252:19;3304:4;3299:3;3295:14;3280:29;;3147:168;;;;:::o;3321:246::-;3402:1;3412:113;3426:6;3423:1;3420:13;3412:113;;;3511:1;3506:3;3502:11;3496:18;3492:1;3487:3;3483:11;3476:39;3448:2;3445:1;3441:10;3436:15;;3412:113;;;3559:1;3550:6;3545:3;3541:16;3534:27;3383:184;3321:246;;;:::o;3573:102::-;3614:6;3665:2;3661:7;3656:2;3649:5;3645:14;3641:28;3631:38;;3573:102;;;:::o;3681:373::-;3767:3;3795:38;3827:5;3795:38;:::i;:::-;3849:70;3912:6;3907:3;3849:70;:::i;:::-;3842:77;;3928:65;3986:6;3981:3;3974:4;3967:5;3963:16;3928:65;:::i;:::-;4018:29;4040:6;4018:29;:::i;:::-;4013:3;4009:39;4002:46;;3771:283;3681:373;;;;:::o;4060:419::-;4199:4;4237:2;4226:9;4222:18;4214:26;;4250:71;4318:1;4307:9;4303:17;4294:6;4250:71;:::i;:::-;4368:9;4362:4;4358:20;4353:2;4342:9;4338:18;4331:48;4396:76;4467:4;4458:6;4396:76;:::i;:::-;4388:84;;4060:419;;;;;:::o;4485:147::-;4586:11;4623:3;4608:18;;4485:147;;;;:::o;4638:386::-;4742:3;4770:38;4802:5;4770:38;:::i;:::-;4824:88;4905:6;4900:3;4824:88;:::i;:::-;4817:95;;4921:65;4979:6;4974:3;4967:4;4960:5;4956:16;4921:65;:::i;:::-;5011:6;5006:3;5002:16;4995:23;;4746:278;4638:386;;;;:::o;5030:427::-;5206:3;5228:93;5317:3;5308:6;5228:93;:::i;:::-;5221:100;;5338:93;5427:3;5418:6;5338:93;:::i;:::-;5331:100;;5448:3;5441:10;;5030:427;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\nimport \"./WalletAccount.sol\";\n\n/**\n * A sample factory contract for SimpleAccount\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n * The factory's createAccount returns the target account address even if it is already installed.\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\n */\ncontract WalletAccountFactory {\n    WalletAccount public immutable accountImplementation;\n\n    constructor(IEntryPoint _entryPoint) {\n        accountImplementation = new WalletAccount(_entryPoint);\n    }\n\n    /**\n     * create an account, and return its address.\n     * returns the address even if the account is already deployed.\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\n     */\n    function createAccount(address owner,uint256 salt) public returns (WalletAccount ret) {\n        address addr = getAddress(owner, salt);\n        uint codeSize = addr.code.length;\n        if (codeSize > 0) {\n            return WalletAccount(payable(addr));\n        }\n        ret = WalletAccount(payable(new ERC1967Proxy{salt : bytes32(salt)}(\n                address(accountImplementation),\n                abi.encodeCall(WalletAccount.initialize, (owner))\n            )));\n    }\n\n    /**\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\n     */\n    function getAddress(address owner,uint256 salt) public view returns (address) {\n        return Create2.computeAddress(bytes32(salt), keccak256(abi.encodePacked(\n                type(ERC1967Proxy).creationCode,\n                abi.encode(\n                    address(accountImplementation),\n                    abi.encodeCall(WalletAccount.initialize, (owner))\n                )\n            )));\n    }\n}",
  "sourcePath": "/Users/Nobu/Documents/Works/MyProject/bailout/account-abstraction/contracts/samples/WalletAccountFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/samples/WalletAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        5082
      ],
      "BaseAccount": [
        6795
      ],
      "Create2": [
        5185
      ],
      "ECDSA": [
        5781
      ],
      "ERC1967Proxy": [
        3015
      ],
      "ERC1967Upgrade": [
        3319
      ],
      "IAccount": [
        9922
      ],
      "IAggregator": [
        9956
      ],
      "IBeacon": [
        3381
      ],
      "IERC1155Receiver": [
        3707
      ],
      "IERC165": [
        5793
      ],
      "IERC1822Proxiable": [
        2978
      ],
      "IERC1967": [
        2968
      ],
      "IERC721Receiver": [
        4732
      ],
      "IERC777Recipient": [
        4752
      ],
      "IEntryPoint": [
        10154
      ],
      "IStakeManager": [
        10294
      ],
      "Initializable": [
        3550
      ],
      "Math": [
        6658
      ],
      "Proxy": [
        3371
      ],
      "StorageSlot": [
        5245
      ],
      "Strings": [
        5420
      ],
      "TokenCallbackHandler": [
        15676
      ],
      "UUPSUpgradeable": [
        3666
      ],
      "UserOperation": [
        10319
      ],
      "UserOperationLib": [
        10424
      ],
      "ValidationData": [
        9214
      ],
      "WalletAccount": [
        12364
      ],
      "WalletAccountFactory": [
        12496
      ],
      "_intersectTimeRange": [
        9358
      ],
      "_packValidationData": [
        9395,
        9433
      ],
      "_parseValidationData": [
        9273
      ]
    },
    "id": 12497,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12366,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:69"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 12367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12497,
        "sourceUnit": 5186,
        "src": "61:51:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "id": 12368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12497,
        "sourceUnit": 3016,
        "src": "113:64:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/samples/WalletAccount.sol",
        "file": "./WalletAccount.sol",
        "id": 12369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12497,
        "sourceUnit": 12365,
        "src": "179:29:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "WalletAccountFactory",
        "contractDependencies": [
          3015,
          12364
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 12370,
          "nodeType": "StructuredDocumentation",
          "src": "210:388:69",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 12496,
        "linearizedBaseContracts": [
          12496
        ],
        "name": "WalletAccountFactory",
        "nameLocation": "608:20:69",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 12373,
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "666:21:69",
            "nodeType": "VariableDeclaration",
            "scope": 12496,
            "src": "635:52:69",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WalletAccount_$12364",
              "typeString": "contract WalletAccount"
            },
            "typeName": {
              "id": 12372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12371,
                "name": "WalletAccount",
                "nameLocations": [
                  "635:13:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12364,
                "src": "635:13:69"
              },
              "referencedDeclaration": 12364,
              "src": "635:13:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WalletAccount_$12364",
                "typeString": "contract WalletAccount"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12387,
              "nodeType": "Block",
              "src": "731:71:69",
              "statements": [
                {
                  "expression": {
                    "id": 12385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12379,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12373,
                      "src": "741:21:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$12364",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12383,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12376,
                          "src": "783:11:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$10154",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$10154",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 12382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "765:17:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$10154_$returns$_t_contract$_WalletAccount_$12364_$",
                          "typeString": "function (contract IEntryPoint) returns (contract WalletAccount)"
                        },
                        "typeName": {
                          "id": 12381,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12380,
                            "name": "WalletAccount",
                            "nameLocations": [
                              "769:13:69"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12364,
                            "src": "769:13:69"
                          },
                          "referencedDeclaration": 12364,
                          "src": "769:13:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WalletAccount_$12364",
                            "typeString": "contract WalletAccount"
                          }
                        }
                      },
                      "id": 12384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "765:30:69",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$12364",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "src": "741:54:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WalletAccount_$12364",
                      "typeString": "contract WalletAccount"
                    }
                  },
                  "id": 12386,
                  "nodeType": "ExpressionStatement",
                  "src": "741:54:69"
                }
              ]
            },
            "id": 12388,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12376,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "718:11:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12388,
                  "src": "706:23:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$10154",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 12375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12374,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "706:11:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10154,
                      "src": "706:11:69"
                    },
                    "referencedDeclaration": 10154,
                    "src": "706:11:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$10154",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:25:69"
            },
            "returnParameters": {
              "id": 12378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:0:69"
            },
            "scope": 12496,
            "src": "694:108:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12452,
              "nodeType": "Block",
              "src": "1268:391:69",
              "statements": [
                {
                  "assignments": [
                    12400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12400,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1286:4:69",
                      "nodeType": "VariableDeclaration",
                      "scope": 12452,
                      "src": "1278:12:69",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1278:7:69",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12405,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12402,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12391,
                        "src": "1304:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12403,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12393,
                        "src": "1311:4:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12401,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12495,
                      "src": "1293:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view returns (address)"
                      }
                    },
                    "id": 12404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:23:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1278:38:69"
                },
                {
                  "assignments": [
                    12407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12407,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1331:8:69",
                      "nodeType": "VariableDeclaration",
                      "scope": 12452,
                      "src": "1326:13:69",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12406,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:4:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12411,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 12408,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12400,
                        "src": "1342:4:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 12409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1347:4:69",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1342:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 12410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1352:6:69",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1342:16:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1326:32:69"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12412,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12407,
                      "src": "1372:8:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1383:1:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1372:12:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12423,
                  "nodeType": "IfStatement",
                  "src": "1368:78:69",
                  "trueBody": {
                    "id": 12422,
                    "nodeType": "Block",
                    "src": "1386:60:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 12418,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12400,
                                  "src": "1429:4:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1421:8:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 12416,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1421:8:69",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 12419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1421:13:69",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 12415,
                            "name": "WalletAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12364,
                            "src": "1407:13:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_WalletAccount_$12364_$",
                              "typeString": "type(contract WalletAccount)"
                            }
                          },
                          "id": 12420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1407:28:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WalletAccount_$12364",
                            "typeString": "contract WalletAccount"
                          }
                        },
                        "functionReturnParameters": 12398,
                        "id": 12421,
                        "nodeType": "Return",
                        "src": "1400:35:69"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12424,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12397,
                      "src": "1455:3:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$12364",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12438,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12373,
                                      "src": "1547:21:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WalletAccount_$12364",
                                        "typeString": "contract WalletAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_WalletAccount_$12364",
                                        "typeString": "contract WalletAccount"
                                      }
                                    ],
                                    "id": 12437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1539:7:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12436,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1539:7:69",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1539:30:69",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 12442,
                                        "name": "WalletAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12364,
                                        "src": "1602:13:69",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_WalletAccount_$12364_$",
                                          "typeString": "type(contract WalletAccount)"
                                        }
                                      },
                                      "id": 12443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1616:10:69",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12060,
                                      "src": "1602:24:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function WalletAccount.initialize(address)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 12444,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12391,
                                          "src": "1629:5:69",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "id": 12445,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1628:7:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function WalletAccount.initialize(address)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 12440,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1587:3:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 12441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1591:10:69",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1587:14:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 12446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1587:49:69",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 12430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1483:16:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$3015_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 12429,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 12428,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1487:12:69"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 3015,
                                      "src": "1487:12:69"
                                    },
                                    "referencedDeclaration": 3015,
                                    "src": "1487:12:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$3015",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 12435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12433,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12393,
                                        "src": "1515:4:69",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 12432,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1507:7:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 12431,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1507:7:69",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1507:13:69",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1483:38:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$3015_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 12447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1483:167:69",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$3015",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$3015",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 12427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1475:8:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 12426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1475:8:69",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1475:176:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 12425,
                        "name": "WalletAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12364,
                        "src": "1461:13:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WalletAccount_$12364_$",
                          "typeString": "type(contract WalletAccount)"
                        }
                      },
                      "id": 12449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1461:191:69",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$12364",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "src": "1455:197:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WalletAccount_$12364",
                      "typeString": "contract WalletAccount"
                    }
                  },
                  "id": 12451,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:197:69"
                }
              ]
            },
            "documentation": {
              "id": 12389,
              "nodeType": "StructuredDocumentation",
              "src": "808:369:69",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "5fbfb9cf",
            "id": 12453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1191:13:69",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12391,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1213:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12453,
                  "src": "1205:13:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12393,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1227:4:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12453,
                  "src": "1219:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1204:28:69"
            },
            "returnParameters": {
              "id": 12398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12397,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1263:3:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12453,
                  "src": "1249:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WalletAccount_$12364",
                    "typeString": "contract WalletAccount"
                  },
                  "typeName": {
                    "id": 12396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12395,
                      "name": "WalletAccount",
                      "nameLocations": [
                        "1249:13:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12364,
                      "src": "1249:13:69"
                    },
                    "referencedDeclaration": 12364,
                    "src": "1249:13:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WalletAccount_$12364",
                      "typeString": "contract WalletAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1248:19:69"
            },
            "scope": 12496,
            "src": "1182:477:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12494,
              "nodeType": "Block",
              "src": "1862:322:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12467,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12458,
                            "src": "1910:4:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 12466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1902:7:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 12465,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1902:7:69",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1902:13:69",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 12473,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3015,
                                      "src": "1966:12:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$3015_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$3015_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 12472,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "1961:4:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 12474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1961:18:69",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$3015",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 12475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1980:12:69",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "1961:31:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12480,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12373,
                                        "src": "2050:21:69",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_WalletAccount_$12364",
                                          "typeString": "contract WalletAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_WalletAccount_$12364",
                                          "typeString": "contract WalletAccount"
                                        }
                                      ],
                                      "id": 12479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2042:7:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12478,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2042:7:69",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2042:30:69",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 12484,
                                          "name": "WalletAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12364,
                                          "src": "2109:13:69",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_WalletAccount_$12364_$",
                                            "typeString": "type(contract WalletAccount)"
                                          }
                                        },
                                        "id": 12485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2123:10:69",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12060,
                                        "src": "2109:24:69",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function WalletAccount.initialize(address)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 12486,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12456,
                                            "src": "2136:5:69",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 12487,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2135:7:69",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function WalletAccount.initialize(address)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12482,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2094:3:69",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 12483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2098:10:69",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2094:14:69",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 12488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2094:49:69",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12476,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "2010:3:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 12477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2014:6:69",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2010:10:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 12489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2010:151:69",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 12470,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "1927:3:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 12471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1931:12:69",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1927:16:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 12490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1927:248:69",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 12469,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "1917:9:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 12491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1917:259:69",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 12463,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5185,
                        "src": "1879:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$5185_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 12464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1887:14:69",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5170,
                      "src": "1879:22:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 12492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1879:298:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12462,
                  "id": 12493,
                  "nodeType": "Return",
                  "src": "1872:305:69"
                }
              ]
            },
            "documentation": {
              "id": 12454,
              "nodeType": "StructuredDocumentation",
              "src": "1665:114:69",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "8cb84e18",
            "id": 12495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1793:10:69",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12456,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1812:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12495,
                  "src": "1804:13:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12458,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1826:4:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12495,
                  "src": "1818:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1803:28:69"
            },
            "returnParameters": {
              "id": 12462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12495,
                  "src": "1853:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1852:9:69"
            },
            "scope": 12496,
            "src": "1784:400:69",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12497,
        "src": "599:1587:69",
        "usedErrors": []
      }
    ],
    "src": "36:2150:69"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0x9b5831F93E35a1Fcb1FFDf15ee5192995017101d",
      "transactionHash": "0x49f9a1a41a6cb80842094d6892afe4f3aba4e5393bdd43e7f5e27077b852f47e"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-15T05:45:10.403Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAccount(address,uint256)": {
        "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
      },
      "getAddress(address,uint256)": {
        "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
      }
    },
    "notice": "A sample factory contract for SimpleAccount A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.",
    "version": 1
  }
}