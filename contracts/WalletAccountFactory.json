{
  "contractName": "WalletAccountFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract WalletAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract WalletAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract WalletAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract WalletAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for WalletAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/samples/WalletAccountFactory.sol\":\"WalletAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xafc07f37809f74d9c66d6461cc0f85fb5147ab855acd0acc30af4b2272130c61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e63fa9a8bc793ccbdc82e93f85a4d2d5b66fd3f42303a6f5fe54c5ff230eb81\",\"dweb:/ipfs/QmVMxEw74WgFPqTZjXbYBLbo6gbbjtTocnfBW54Ft6W6Tb\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x73bc87e62dd54bc3d59d562fcaa3559f94ba606639fa6b96edde7eb4ce2eecd5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4df277a04368858dfd3860d242a7caae265eca4bfafa650a60704462de339802\",\"dweb:/ipfs/QmW42jjQkjuQFEJK4wruykViS4rANorZA6i9Kd4nCwCBtv\"]},\"project:/contracts/core/Helpers.sol\":{\"keccak256\":\"0x4bad395ba0b408c87d0a30a76f8fd5a9915e3a531daeee23ccea0671574597a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c737b70ddf5a0e25633dc2e4db8f377943898d5f143d48b9c2aeffbe00e5b303\",\"dweb:/ipfs/QmWEVD6a372RDKyXQUXNWAohA7BGqNehBJnGi56HAmNFpm\"]},\"project:/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"project:/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"project:/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"project:/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"project:/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]},\"project:/contracts/samples/WalletAccount.sol\":{\"keccak256\":\"0xe751abf6e296979bfb1c69a01212d261eb4928cb0779253ef7600f96f6dade36\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://65f4f09263889cf443306c7283dd07273c4b2041dfb3ccf1d160a28ecd4d0219\",\"dweb:/ipfs/QmWUgQuHcyNHqCxyuP1ghwjx8gLEBD5g6Cfq9px2ky9Eii\"]},\"project:/contracts/samples/WalletAccountFactory.sol\":{\"keccak256\":\"0xba47ad53726f6233ecd6f4f2fbd1f1ad3b446619fad32585c9e8cfb66cf8a0aa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0c282d9409ffe3ac3fe97e40f6cc77089928e85329655522331cd4ad8e15cc2d\",\"dweb:/ipfs/QmSEyV9h6DYy5UvjARv8Y73Hk6McBkmDRGDAmpWGVnAPMQ\"]},\"project:/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620049223803806200492283398181016040528101906100349190610124565b80604051610041906100a1565b61004b91906101b0565b604051809103906000f080158015610067573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101cb565b61384f80620010d383390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b60006100f1826100d4565b9050919050565b610101816100e6565b811461010c57600080fd5b50565b60008151905061011e816100f8565b92915050565b60006020828403121561013a576101396100af565b5b60006101488482850161010f565b91505092915050565b6000819050919050565b600061017661017161016c846100b4565b610151565b6100b4565b9050919050565b60006101888261015b565b9050919050565b600061019a8261017d565b9050919050565b6101aa8161018f565b82525050565b60006020820190506101c560008301846101a1565b92915050565b608051610edf620001f46000396000818160db0152818161014501526102360152610edf6000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b5780635fbfb9cf146200006d5780638cb84e1814620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b600480360381019062000085919062000483565b620000fd565b6040516200009a9190620003e1565b60405180910390f35b620000c16004803603810190620000bb919062000483565b62000204565b604051620000d09190620004db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806200010c848462000204565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200013f578192505050620001fe565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620001779190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620001ca9062000348565b620001d792919062000592565b8190604051809103906000f5905080158015620001f8573d6000803e3d6000fd5b50925050505b92915050565b6000620002fe8260001b60405180602001620002209062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620002689190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620002c092919062000592565b604051602081830303815290604052604051602001620002e292919062000608565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610879806200063183390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b600080fd5b6000620004108262000356565b9050919050565b620004228162000403565b81146200042e57600080fd5b50565b600081359050620004428162000417565b92915050565b6000819050919050565b6200045d8162000448565b81146200046957600080fd5b50565b6000813590506200047d8162000452565b92915050565b600080604083850312156200049d576200049c620003fe565b5b6000620004ad8582860162000431565b9250506020620004c0858286016200046c565b9150509250929050565b620004d58162000403565b82525050565b6000602082019050620004f26000830184620004ca565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200053457808201518184015260208101905062000517565b60008484015250505050565b6000601f19601f8301169050919050565b60006200055e82620004f8565b6200056a818562000503565b93506200057c81856020860162000514565b620005878162000540565b840191505092915050565b6000604082019050620005a96000830185620004ca565b8181036020830152620005bd818462000551565b90509392505050565b600081905092915050565b6000620005de82620004f8565b620005ea8185620005c6565b9350620005fc81856020860162000514565b80840191505092915050565b6000620006168285620005d1565b9150620006248284620005d1565b9150819050939250505056fe608060405260405161087938038061087983398181016040528101906100259190610520565b6100378282600061003e60201b60201c565b505061074f565b61004d8361007660201b60201c565b60008251118061005a5750805b156100715761006f83836100cb60201b60201c565b505b505050565b610085816100fe60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100f68383604051806060016040528060278152602001610852602791396101c360201b60201c565b905092915050565b61010d8161024f60201b60201c565b61014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105ff565b60405180910390fd5b8061017f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101ed9190610666565b600060405180830381855af49150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b50915091506102448683838761027c60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102e45760008351036102dc5761029c8561024f60201b60201c565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906106c9565b60405180910390fd5b5b8290506102f5565b6102f483836102fd60201b60201c565b5b949350505050565b6000825111156103105781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344919061072d565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038c82610361565b9050919050565b61039c81610381565b81146103a757600080fd5b50565b6000815190506103b981610393565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b600061044461034d565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b60005b838110156104a4578082015181840152602081019050610489565b60008484015250505050565b60006104c36104be84610455565b61043a565b9050828152602081018484840111156104df576104de6103c4565b5b6104ea848285610486565b509392505050565b600082601f830112610507576105066103bf565b5b81516105178482602086016104b0565b91505092915050565b6000806040838503121561053757610536610357565b5b6000610545858286016103aa565b925050602083015167ffffffffffffffff8111156105665761056561035c565b5b610572858286016104f2565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006105e9602d8361057c565b91506105f48261058d565b604082019050919050565b60006020820190508181036000830152610618816105dc565b9050919050565b600081519050919050565b600081905092915050565b60006106408261061f565b61064a818561062a565b935061065a818560208601610486565b80840191505092915050565b60006106728284610635565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006106b3601d8361057c565b91506106be8261067d565b602082019050919050565b600060208201905081810360008301526106e2816106a6565b9050919050565b600081519050919050565b60006106ff826106e9565b610709818561057c565b9350610719818560208601610486565b610722816103c9565b840191505092915050565b6000602082019050818103600083015261074781846106f4565b905092915050565b60f58061075d6000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e602c565b602a6026602e565b603b565b565b565b600060366060565b905090565b3660008037600080366000845af43d6000803e8060008114605b573d6000f35b3d6000fd5b6000608c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60b5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea26469706673582212204daf5b6158450e4ca00de7f332ca5a5020982e01002cc53b7fa25d9d1c4e05af64736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122039931f61d4fe54670a58ccf6fe2d16b9332c88251240363b2e9057a1a0d7e79464736f6c6343000813003360c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b506040516200384f3803806200384f83398181016040528101906200006a9190620001fa565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b5062000310565b600060019054906101000a900460ff161562000108576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ff90620002b3565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1610156200017a5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001719190620002f3565b60405180910390a15b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ae8262000181565b9050919050565b6000620001c282620001a1565b9050919050565b620001d481620001b5565b8114620001e057600080fd5b50565b600081519050620001f481620001c9565b92915050565b6000602082840312156200021357620002126200017c565b5b60006200022384828501620001e3565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200029b6027836200022c565b9150620002a8826200023d565b604082019050919050565b60006020820190508181036000830152620002ce816200028c565b9050919050565b600060ff82169050919050565b620002ed81620002d5565b82525050565b60006020820190506200030a6000830184620002e2565b92915050565b60805160a0516134f66200035960003960008181610caa0152611696015260008181610771015281816107ff01528181610a3701528181610ac50152610b7501526134f66000f3fe60806040526004361061012d5760003560e01c806352d1902d116100ab578063b61d27f61161006f578063b61d27f6146103ce578063bbedb64b146103f7578063bc197c8114610420578063c399ec881461045d578063c4d66de814610488578063f23a6e61146104b157610134565b806352d1902d146102f757806368a9f31c146103225780638da5cb5b1461034d578063affed0e014610378578063b0d691fe146103a357610134565b80633659cfe6116100f25780633659cfe6146102425780633a871cdd1461026b5780634a58db19146102a85780634d44560d146102b25780634f1ef286146102db57610134565b806223de291461013957806301ffc9a7146101625780630543f1841461019f578063150b7a02146101dc57806318dfb3c71461021957610134565b3661013457005b600080fd5b34801561014557600080fd5b50610160600480360381019061015b9190611db7565b6104ee565b005b34801561016e57600080fd5b5061018960048036038101906101849190611ede565b6104f8565b6040516101969190611f26565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c19190611f41565b610632565b6040516101d39190611f7d565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190611f98565b610648565b604051610210919061202f565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b91906120f6565b61065d565b005b34801561024e57600080fd5b5061026960048036038101906102649190612177565b61076f565b005b34801561027757600080fd5b50610292600480360381019061028d91906121ff565b6108f7565b60405161029f9190611f7d565b60405180910390f35b6102b0610940565b005b3480156102be57600080fd5b506102d960048036038101906102d491906122ac565b6109b5565b005b6102f560048036038101906102f0919061242d565b610a35565b005b34801561030357600080fd5b5061030c610b71565b6040516103199190612498565b60405180910390f35b34801561032e57600080fd5b50610337610c2a565b60405161034491906124c2565b60405180910390f35b34801561035957600080fd5b50610362610c50565b60405161036f91906124c2565b60405180910390f35b34801561038457600080fd5b5061038d610c76565b60405161039a9190611f7d565b60405180910390f35b3480156103af57600080fd5b506103b8610ca6565b6040516103c5919061253c565b60405180910390f35b3480156103da57600080fd5b506103f560048036038101906103f09190612557565b610cce565b005b34801561040357600080fd5b5061041e60048036038101906104199190612177565b610d2b565b005b34801561042c57600080fd5b5061044760048036038101906104429190612621565b610d77565b604051610454919061202f565b60405180910390f35b34801561046957600080fd5b50610472610d8f565b60405161047f9190611f7d565b60405180910390f35b34801561049457600080fd5b506104af60048036038101906104aa9190612177565b610e17565b005b3480156104bd57600080fd5b506104d860048036038101906104d391906126fd565b610f57565b6040516104e5919061202f565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105c357507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061062b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600060018261064191906127c6565b9050919050565b600063150b7a0260e01b905095945050505050565b610665610f6d565b8181905084849050146106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a490612857565b60405180910390fd5b60005b84849050811015610768576107558585838181106106d1576106d0612877565b5b90506020020160208101906106e69190612177565b60008585858181106106fb576106fa612877565b5b905060200281019061070d91906128b5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061103c565b808061076090612918565b9150506106b0565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f4906129d2565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661083c6110c0565b73ffffffffffffffffffffffffffffffffffffffff1614610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990612a64565b60405180910390fd5b61089b81611117565b6108f481600067ffffffffffffffff8111156108ba576108b9612302565b5b6040519080825280601f01601f1916602001820160405280156108ec5781602001600182028036833780820191505090505b506000611122565b50565b6000610901611290565b61090b8484611307565b9050600084806040019061091f91906128b5565b9050036109305761092f846113e5565b5b61093982611493565b9392505050565b610948610ca6565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161098191906124c2565b6000604051808303818588803b15801561099a57600080fd5b505af11580156109ae573d6000803e3d6000fd5b5050505050565b6109bd61152f565b6109c5610ca6565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016109ff929190612a93565b600060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba906129d2565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b026110c0565b73ffffffffffffffffffffffffffffffffffffffff1614610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f90612a64565b60405180910390fd5b610b6182611117565b610b6d82826001611122565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf890612b2e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610cd6610f6d565b610d25848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061103c565b50505050565b610d33610f6d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600063bc197c8160e01b905098975050505050505050565b6000610d99610ca6565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dd191906124c2565b602060405180830381865afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e129190612b63565b905090565b60008060019054906101000a900460ff16159050808015610e485750600160008054906101000a900460ff1660ff16105b80610e755750610e57306115f7565b158015610e745750600160008054906101000a900460ff1660ff16145b5b610eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eab90612c02565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610ef1576001600060016101000a81548160ff0219169083151502179055505b610efa8261161a565b8015610f535760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610f4a9190612c6a565b60405180910390a15b5050565b600063f23a6e6160e01b90509695505050505050565b610f75610ca6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ffb57506001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61103a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103190612cd1565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110659190612d62565b60006040518083038185875af1925050503d80600081146110a2576040519150601f19603f3d011682016040523d82523d6000602084013e6110a7565b606091505b5091509150816110b957805160208201fd5b5050505050565b60006110ee7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6116fa565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61111f61152f565b50565b61114e7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611704565b60000160009054906101000a900460ff16156111725761116d8361170e565b61128b565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111da57506040513d601f19601f820116820180604052508101906111d79190612d8e565b60015b611219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121090612e2d565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461127e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127590612ebf565b60405180910390fd5b5061128a8383836117c7565b5b505050565b611298610ca6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fc90612f2b565b60405180910390fd5b565b600080611313836117f3565b905061137b8480610140019061132991906128b5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508261182390919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff166001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113d95760019150506113df565b60009150505b92915050565b80602001356001600081819054906101000a90046bffffffffffffffffffffffff168092919061141490612f63565b91906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506bffffffffffffffffffffffff1614611490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148790612fe3565b60405180910390fd5b50565b6000811461152c5760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516114e390613029565b600060405180830381858888f193505050503d8060008114611521576040519150601f19603f3d011682016040523d82523d6000602084013e611526565b606091505b50509050505b50565b6001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806115b657503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6115f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ec9061308a565b60405180910390fd5b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b806001600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de60405160405180910390a350565b6000819050919050565b6000819050919050565b611717816115f7565b611756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174d9061311c565b60405180910390fd5b806117837f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6116fa565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6117d08361184a565b6000825111806117dd5750805b156117ee576117ec8383611899565b505b505050565b60008160405160200161180691906131b4565b604051602081830303815290604052805190602001209050919050565b600080600061183285856118c6565b9150915061183f81611917565b819250505092915050565b6118538161170e565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606118be838360405180606001604052806027815260200161349a60279139611a7d565b905092915050565b60008060418351036119075760008060006020860151925060408601519150606086015160001a90506118fb87828585611b03565b94509450505050611910565b60006002915091505b9250929050565b6000600481111561192b5761192a6131da565b5b81600481111561193e5761193d6131da565b5b0315611a7a5760016004811115611958576119576131da565b5b81600481111561196b5761196a6131da565b5b036119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a290613255565b60405180910390fd5b600260048111156119bf576119be6131da565b5b8160048111156119d2576119d16131da565b5b03611a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a09906132c1565b60405180910390fd5b60036004811115611a2657611a256131da565b5b816004811115611a3957611a386131da565b5b03611a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7090613353565b60405180910390fd5b5b50565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611aa79190612d62565b600060405180830381855af49150503d8060008114611ae2576040519150601f19603f3d011682016040523d82523d6000602084013e611ae7565b606091505b5091509150611af886838387611be5565b925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611b3e576000600391509150611bdc565b600060018787878760405160008152602001604052604051611b639493929190613382565b6020604051602081039080840390855afa158015611b85573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611bd357600060019250925050611bdc565b80600092509250505b94509492505050565b60608315611c47576000835103611c3f57611bff856115f7565b611c3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3590613413565b60405180910390fd5b5b829050611c52565b611c518383611c5a565b5b949350505050565b600082511115611c6d5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca19190613477565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ce982611cbe565b9050919050565b611cf981611cde565b8114611d0457600080fd5b50565b600081359050611d1681611cf0565b92915050565b6000819050919050565b611d2f81611d1c565b8114611d3a57600080fd5b50565b600081359050611d4c81611d26565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d7757611d76611d52565b5b8235905067ffffffffffffffff811115611d9457611d93611d57565b5b602083019150836001820283011115611db057611daf611d5c565b5b9250929050565b60008060008060008060008060c0898b031215611dd757611dd6611cb4565b5b6000611de58b828c01611d07565b9850506020611df68b828c01611d07565b9750506040611e078b828c01611d07565b9650506060611e188b828c01611d3d565b955050608089013567ffffffffffffffff811115611e3957611e38611cb9565b5b611e458b828c01611d61565b945094505060a089013567ffffffffffffffff811115611e6857611e67611cb9565b5b611e748b828c01611d61565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ebb81611e86565b8114611ec657600080fd5b50565b600081359050611ed881611eb2565b92915050565b600060208284031215611ef457611ef3611cb4565b5b6000611f0284828501611ec9565b91505092915050565b60008115159050919050565b611f2081611f0b565b82525050565b6000602082019050611f3b6000830184611f17565b92915050565b600060208284031215611f5757611f56611cb4565b5b6000611f6584828501611d3d565b91505092915050565b611f7781611d1c565b82525050565b6000602082019050611f926000830184611f6e565b92915050565b600080600080600060808688031215611fb457611fb3611cb4565b5b6000611fc288828901611d07565b9550506020611fd388828901611d07565b9450506040611fe488828901611d3d565b935050606086013567ffffffffffffffff81111561200557612004611cb9565b5b61201188828901611d61565b92509250509295509295909350565b61202981611e86565b82525050565b60006020820190506120446000830184612020565b92915050565b60008083601f8401126120605761205f611d52565b5b8235905067ffffffffffffffff81111561207d5761207c611d57565b5b60208301915083602082028301111561209957612098611d5c565b5b9250929050565b60008083601f8401126120b6576120b5611d52565b5b8235905067ffffffffffffffff8111156120d3576120d2611d57565b5b6020830191508360208202830111156120ef576120ee611d5c565b5b9250929050565b600080600080604085870312156121105761210f611cb4565b5b600085013567ffffffffffffffff81111561212e5761212d611cb9565b5b61213a8782880161204a565b9450945050602085013567ffffffffffffffff81111561215d5761215c611cb9565b5b612169878288016120a0565b925092505092959194509250565b60006020828403121561218d5761218c611cb4565b5b600061219b84828501611d07565b91505092915050565b600080fd5b600061016082840312156121c0576121bf6121a4565b5b81905092915050565b6000819050919050565b6121dc816121c9565b81146121e757600080fd5b50565b6000813590506121f9816121d3565b92915050565b60008060006060848603121561221857612217611cb4565b5b600084013567ffffffffffffffff81111561223657612235611cb9565b5b612242868287016121a9565b9350506020612253868287016121ea565b925050604061226486828701611d3d565b9150509250925092565b600061227982611cbe565b9050919050565b6122898161226e565b811461229457600080fd5b50565b6000813590506122a681612280565b92915050565b600080604083850312156122c3576122c2611cb4565b5b60006122d185828601612297565b92505060206122e285828601611d3d565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61233a826122f1565b810181811067ffffffffffffffff8211171561235957612358612302565b5b80604052505050565b600061236c611caa565b90506123788282612331565b919050565b600067ffffffffffffffff82111561239857612397612302565b5b6123a1826122f1565b9050602081019050919050565b82818337600083830152505050565b60006123d06123cb8461237d565b612362565b9050828152602081018484840111156123ec576123eb6122ec565b5b6123f78482856123ae565b509392505050565b600082601f83011261241457612413611d52565b5b81356124248482602086016123bd565b91505092915050565b6000806040838503121561244457612443611cb4565b5b600061245285828601611d07565b925050602083013567ffffffffffffffff81111561247357612472611cb9565b5b61247f858286016123ff565b9150509250929050565b612492816121c9565b82525050565b60006020820190506124ad6000830184612489565b92915050565b6124bc81611cde565b82525050565b60006020820190506124d760008301846124b3565b92915050565b6000819050919050565b60006125026124fd6124f884611cbe565b6124dd565b611cbe565b9050919050565b6000612514826124e7565b9050919050565b600061252682612509565b9050919050565b6125368161251b565b82525050565b6000602082019050612551600083018461252d565b92915050565b6000806000806060858703121561257157612570611cb4565b5b600061257f87828801611d07565b945050602061259087828801611d3d565b935050604085013567ffffffffffffffff8111156125b1576125b0611cb9565b5b6125bd87828801611d61565b925092505092959194509250565b60008083601f8401126125e1576125e0611d52565b5b8235905067ffffffffffffffff8111156125fe576125fd611d57565b5b60208301915083602082028301111561261a57612619611d5c565b5b9250929050565b60008060008060008060008060a0898b03121561264157612640611cb4565b5b600061264f8b828c01611d07565b98505060206126608b828c01611d07565b975050604089013567ffffffffffffffff81111561268157612680611cb9565b5b61268d8b828c016125cb565b9650965050606089013567ffffffffffffffff8111156126b0576126af611cb9565b5b6126bc8b828c016125cb565b9450945050608089013567ffffffffffffffff8111156126df576126de611cb9565b5b6126eb8b828c01611d61565b92509250509295985092959890939650565b60008060008060008060a0878903121561271a57612719611cb4565b5b600061272889828a01611d07565b965050602061273989828a01611d07565b955050604061274a89828a01611d3d565b945050606061275b89828a01611d3d565b935050608087013567ffffffffffffffff81111561277c5761277b611cb9565b5b61278889828a01611d61565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127d182611d1c565b91506127dc83611d1c565b92508282019050808211156127f4576127f3612797565b5b92915050565b600082825260208201905092915050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b60006128416013836127fa565b915061284c8261280b565b602082019050919050565b6000602082019050818103600083015261287081612834565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126128d2576128d16128a6565b5b80840192508235915067ffffffffffffffff8211156128f4576128f36128ab565b5b6020830192506001820236038313156129105761290f6128b0565b5b509250929050565b600061292382611d1c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361295557612954612797565b5b600182019050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006129bc602c836127fa565b91506129c782612960565b604082019050919050565b600060208201905081810360008301526129eb816129af565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000612a4e602c836127fa565b9150612a59826129f2565b604082019050919050565b60006020820190508181036000830152612a7d81612a41565b9050919050565b612a8d8161226e565b82525050565b6000604082019050612aa86000830185612a84565b612ab56020830184611f6e565b9392505050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000612b186038836127fa565b9150612b2382612abc565b604082019050919050565b60006020820190508181036000830152612b4781612b0b565b9050919050565b600081519050612b5d81611d26565b92915050565b600060208284031215612b7957612b78611cb4565b5b6000612b8784828501612b4e565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612bec602e836127fa565b9150612bf782612b90565b604082019050919050565b60006020820190508181036000830152612c1b81612bdf565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612c54612c4f612c4a84612c22565b6124dd565b612c2c565b9050919050565b612c6481612c39565b82525050565b6000602082019050612c7f6000830184612c5b565b92915050565b7f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74600082015250565b6000612cbb6020836127fa565b9150612cc682612c85565b602082019050919050565b60006020820190508181036000830152612cea81612cae565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612d25578082015181840152602081019050612d0a565b60008484015250505050565b6000612d3c82612cf1565b612d468185612cfc565b9350612d56818560208601612d07565b80840191505092915050565b6000612d6e8284612d31565b915081905092915050565b600081519050612d88816121d3565b92915050565b600060208284031215612da457612da3611cb4565b5b6000612db284828501612d79565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000612e17602e836127fa565b9150612e2282612dbb565b604082019050919050565b60006020820190508181036000830152612e4681612e0a565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000612ea96029836127fa565b9150612eb482612e4d565b604082019050919050565b60006020820190508181036000830152612ed881612e9c565b9050919050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000612f15601c836127fa565b9150612f2082612edf565b602082019050919050565b60006020820190508181036000830152612f4481612f08565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b6000612f6e82612f4b565b91506bffffffffffffffffffffffff8203612f8c57612f8b612797565b5b600182019050919050565b7f6163636f756e743a20696e76616c6964206e6f6e636500000000000000000000600082015250565b6000612fcd6016836127fa565b9150612fd882612f97565b602082019050919050565b60006020820190508181036000830152612ffc81612fc0565b9050919050565b50565b6000613013600083612cfc565b915061301e82613003565b600082019050919050565b600061303482613006565b9150819050919050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000613074600a836127fa565b915061307f8261303e565b602082019050919050565b600060208201905081810360008301526130a381613067565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000613106602d836127fa565b9150613111826130aa565b604082019050919050565b60006020820190508181036000830152613135816130f9565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b600061317d601c8361313c565b915061318882613147565b601c82019050919050565b6000819050919050565b6131ae6131a9826121c9565b613193565b82525050565b60006131bf82613170565b91506131cb828461319d565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061323f6018836127fa565b915061324a82613209565b602082019050919050565b6000602082019050818103600083015261326e81613232565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006132ab601f836127fa565b91506132b682613275565b602082019050919050565b600060208201905081810360008301526132da8161329e565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061333d6022836127fa565b9150613348826132e1565b604082019050919050565b6000602082019050818103600083015261336c81613330565b9050919050565b61337c81612c2c565b82525050565b60006080820190506133976000830187612489565b6133a46020830186613373565b6133b16040830185612489565b6133be6060830184612489565b95945050505050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006133fd601d836127fa565b9150613408826133c7565b602082019050919050565b6000602082019050818103600083015261342c816133f0565b9050919050565b600081519050919050565b600061344982613433565b61345381856127fa565b9350613463818560208601612d07565b61346c816122f1565b840191505092915050565b60006020820190508181036000830152613491818461343e565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bc3f6cf9ce5a94753829f9695fdfa225d8a7837e36e7e3ec4dee9c4e2d1f324264736f6c63430008130033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b5780635fbfb9cf146200006d5780638cb84e1814620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b600480360381019062000085919062000483565b620000fd565b6040516200009a9190620003e1565b60405180910390f35b620000c16004803603810190620000bb919062000483565b62000204565b604051620000d09190620004db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806200010c848462000204565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200013f578192505050620001fe565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620001779190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620001ca9062000348565b620001d792919062000592565b8190604051809103906000f5905080158015620001f8573d6000803e3d6000fd5b50925050505b92915050565b6000620002fe8260001b60405180602001620002209062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620002689190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620002c092919062000592565b604051602081830303815290604052604051602001620002e292919062000608565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610879806200063183390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b600080fd5b6000620004108262000356565b9050919050565b620004228162000403565b81146200042e57600080fd5b50565b600081359050620004428162000417565b92915050565b6000819050919050565b6200045d8162000448565b81146200046957600080fd5b50565b6000813590506200047d8162000452565b92915050565b600080604083850312156200049d576200049c620003fe565b5b6000620004ad8582860162000431565b9250506020620004c0858286016200046c565b9150509250929050565b620004d58162000403565b82525050565b6000602082019050620004f26000830184620004ca565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200053457808201518184015260208101905062000517565b60008484015250505050565b6000601f19601f8301169050919050565b60006200055e82620004f8565b6200056a818562000503565b93506200057c81856020860162000514565b620005878162000540565b840191505092915050565b6000604082019050620005a96000830185620004ca565b8181036020830152620005bd818462000551565b90509392505050565b600081905092915050565b6000620005de82620004f8565b620005ea8185620005c6565b9350620005fc81856020860162000514565b80840191505092915050565b6000620006168285620005d1565b9150620006248284620005d1565b9150819050939250505056fe608060405260405161087938038061087983398181016040528101906100259190610520565b6100378282600061003e60201b60201c565b505061074f565b61004d8361007660201b60201c565b60008251118061005a5750805b156100715761006f83836100cb60201b60201c565b505b505050565b610085816100fe60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100f68383604051806060016040528060278152602001610852602791396101c360201b60201c565b905092915050565b61010d8161024f60201b60201c565b61014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105ff565b60405180910390fd5b8061017f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027260201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101ed9190610666565b600060405180830381855af49150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b50915091506102448683838761027c60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102e45760008351036102dc5761029c8561024f60201b60201c565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906106c9565b60405180910390fd5b5b8290506102f5565b6102f483836102fd60201b60201c565b5b949350505050565b6000825111156103105781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344919061072d565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038c82610361565b9050919050565b61039c81610381565b81146103a757600080fd5b50565b6000815190506103b981610393565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610412826103c9565b810181811067ffffffffffffffff82111715610431576104306103da565b5b80604052505050565b600061044461034d565b90506104508282610409565b919050565b600067ffffffffffffffff8211156104705761046f6103da565b5b610479826103c9565b9050602081019050919050565b60005b838110156104a4578082015181840152602081019050610489565b60008484015250505050565b60006104c36104be84610455565b61043a565b9050828152602081018484840111156104df576104de6103c4565b5b6104ea848285610486565b509392505050565b600082601f830112610507576105066103bf565b5b81516105178482602086016104b0565b91505092915050565b6000806040838503121561053757610536610357565b5b6000610545858286016103aa565b925050602083015167ffffffffffffffff8111156105665761056561035c565b5b610572858286016104f2565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006105e9602d8361057c565b91506105f48261058d565b604082019050919050565b60006020820190508181036000830152610618816105dc565b9050919050565b600081519050919050565b600081905092915050565b60006106408261061f565b61064a818561062a565b935061065a818560208601610486565b80840191505092915050565b60006106728284610635565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006106b3601d8361057c565b91506106be8261067d565b602082019050919050565b600060208201905081810360008301526106e2816106a6565b9050919050565b600081519050919050565b60006106ff826106e9565b610709818561057c565b9350610719818560208601610486565b610722816103c9565b840191505092915050565b6000602082019050818103600083015261074781846106f4565b905092915050565b60f58061075d6000396000f3fe608060405236601057600e6018565b005b60166018565b005b601e602c565b602a6026602e565b603b565b565b565b600060366060565b905090565b3660008037600080366000845af43d6000803e8060008114605b573d6000f35b3d6000fd5b6000608c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60b5565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea26469706673582212204daf5b6158450e4ca00de7f332ca5a5020982e01002cc53b7fa25d9d1c4e05af64736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122039931f61d4fe54670a58ccf6fe2d16b9332c88251240363b2e9057a1a0d7e79464736f6c63430008130033",
  "immutableReferences": {
    "9420": [
      {
        "length": 32,
        "start": 219
      },
      {
        "length": 32,
        "start": 325
      },
      {
        "length": 32,
        "start": 566
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2384:59",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:59",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:59",
                "type": ""
              }
            ],
            "src": "7:75:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:59",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:59"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:59",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:59"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:59",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:59"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:59",
                "type": ""
              }
            ],
            "src": "334:126:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:59"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:59",
                "type": ""
              }
            ],
            "src": "466:96:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:51:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:35:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "654:17:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:24:59"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IEntryPoint_$7312",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:59",
                "type": ""
              }
            ],
            "src": "568:116:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:99:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "830:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "839:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "832:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "776:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "821:5:59"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IEntryPoint_$7312",
                              "nodeType": "YulIdentifier",
                              "src": "783:37:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "783:44:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "773:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:55:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:63:59"
                  },
                  "nodeType": "YulIf",
                  "src": "763:83:59"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IEntryPoint_$7312",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "746:5:59",
                "type": ""
              }
            ],
            "src": "690:162:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "941:100:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "951:22:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "966:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "960:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:13:59"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "951:5:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1029:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IEntryPoint_$7312",
                      "nodeType": "YulIdentifier",
                      "src": "982:46:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:53:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:53:59"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IEntryPoint_$7312_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "919:6:59",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "927:3:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "935:5:59",
                "type": ""
              }
            ],
            "src": "858:183:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1144:294:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1190:83:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1192:77:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1192:79:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1192:79:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1165:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1186:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "1154:119:59"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1283:148:59",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1298:15:59",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:1:59",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1302:6:59",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1327:94:59",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1393:9:59"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1404:6:59"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1389:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1389:22:59"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:59"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IEntryPoint_$7312_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1337:51:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:84:59"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1327:6:59"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IEntryPoint_$7312_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1114:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1125:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1137:6:59",
                "type": ""
              }
            ],
            "src": "1047:391:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:28:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1486:12:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1493:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1486:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1462:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1472:3:59",
                "type": ""
              }
            ],
            "src": "1444:60:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1570:82:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1580:66:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1638:5:59"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1620:17:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1620:24:59"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1611:8:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1611:34:59"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1593:17:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:53:59"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1580:9:59"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1550:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1560:9:59",
                "type": ""
              }
            ],
            "src": "1510:142:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1718:66:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1728:50:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1772:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1741:30:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1741:37:59"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1728:9:59"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1698:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1708:9:59",
                "type": ""
              }
            ],
            "src": "1658:126:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1870:66:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1880:50:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1924:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1893:30:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:37:59"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1880:9:59"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IEntryPoint_$7312_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1850:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1860:9:59",
                "type": ""
              }
            ],
            "src": "1790:146:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2027:86:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2044:3:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2100:5:59"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IEntryPoint_$7312_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2049:50:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:57:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2037:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:70:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2037:70:59"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IEntryPoint_$7312_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2015:5:59",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2022:3:59",
                "type": ""
              }
            ],
            "src": "1942:171:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2237:144:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2247:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2259:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2270:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2255:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2255:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2247:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2347:6:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2360:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2371:1:59",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2356:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2356:17:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IEntryPoint_$7312_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2283:63:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:91:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2283:91:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IEntryPoint_$7312__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2221:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2232:4:59",
                "type": ""
              }
            ],
            "src": "2119:262:59"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$7312(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$7312(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$7312(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$7312_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$7312(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$7312_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$7312_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$7312_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$7312_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$7312_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$7312__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$7312_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5455:59",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:59",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:59"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:59",
                "type": ""
              }
            ],
            "src": "7:126:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:59",
                "type": ""
              }
            ],
            "src": "139:60:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:59"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:59"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:59"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:59"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:59"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:59",
                "type": ""
              }
            ],
            "src": "205:142:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "421:66:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "431:50:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "475:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "444:30:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:37:59"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "431:9:59"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "401:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "411:9:59",
                "type": ""
              }
            ],
            "src": "353:134:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "583:74:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "593:58:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "645:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "606:38:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "606:45:59"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "593:9:59"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_WalletAccount_$9411_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "563:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "573:9:59",
                "type": ""
              }
            ],
            "src": "493:164:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "758:96:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "775:3:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "841:5:59"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_WalletAccount_$9411_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "780:60:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:67:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:80:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "768:80:59"
                }
              ]
            },
            "name": "abi_encode_t_contract$_WalletAccount_$9411_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "746:5:59",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "753:3:59",
                "type": ""
              }
            ],
            "src": "663:191:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "988:154:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "998:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1010:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1021:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1006:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "998:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1108:6:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1121:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1132:1:59",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:17:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_WalletAccount_$9411_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1034:73:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:101:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1034:101:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_WalletAccount_$9411__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "960:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "972:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "983:4:59",
                "type": ""
              }
            ],
            "src": "860:282:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1188:35:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1198:19:59",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1208:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1181:6:59",
                "type": ""
              }
            ],
            "src": "1148:75:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1318:28:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1335:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1338:1:59",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1328:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:12:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1328:12:59"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1229:117:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1441:28:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1458:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:1:59",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1451:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1451:12:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1451:12:59"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1352:117:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1520:51:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1530:35:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1559:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1541:17:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:24:59"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1530:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1502:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1512:7:59",
                "type": ""
              }
            ],
            "src": "1475:96:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1620:79:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1677:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1686:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1689:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1679:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1679:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1679:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1643:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1668:5:59"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1650:17:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1650:24:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1640:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1640:35:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1633:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1633:43:59"
                  },
                  "nodeType": "YulIf",
                  "src": "1630:63:59"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1613:5:59",
                "type": ""
              }
            ],
            "src": "1577:122:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1757:87:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1767:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1789:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1776:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:20:59"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1767:5:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1832:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1805:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1805:33:59"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1735:6:59",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1743:3:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1751:5:59",
                "type": ""
              }
            ],
            "src": "1705:139:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1895:32:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1905:16:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1916:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1905:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1877:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1887:7:59",
                "type": ""
              }
            ],
            "src": "1850:77:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1976:79:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2033:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2042:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2045:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2035:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2035:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2035:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1999:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2024:5:59"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2006:17:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2006:24:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1996:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1996:35:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1989:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:43:59"
                  },
                  "nodeType": "YulIf",
                  "src": "1986:63:59"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1969:5:59",
                "type": ""
              }
            ],
            "src": "1933:122:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2113:87:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2123:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2145:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2132:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:20:59"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2123:5:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2188:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2161:26:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2161:33:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2161:33:59"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2091:6:59",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2099:3:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2107:5:59",
                "type": ""
              }
            ],
            "src": "2061:139:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2289:391:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2335:83:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2337:77:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2337:79:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2337:79:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2310:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2319:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2306:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2331:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2302:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2302:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "2299:119:59"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2428:117:59",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2443:15:59",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:1:59",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2447:6:59",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2472:63:59",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2507:9:59"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2518:6:59"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2503:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2503:22:59"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2527:7:59"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2482:20:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:53:59"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2472:6:59"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2555:118:59",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2570:16:59",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2584:2:59",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2574:6:59",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2600:63:59",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2635:9:59"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2646:6:59"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2631:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2631:22:59"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2655:7:59"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2610:20:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2610:53:59"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2600:6:59"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2251:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2262:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2274:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2282:6:59",
                "type": ""
              }
            ],
            "src": "2206:474:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2751:53:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2768:3:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2791:5:59"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2773:17:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:24:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2761:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:37:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2761:37:59"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2739:5:59",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2746:3:59",
                "type": ""
              }
            ],
            "src": "2686:118:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2908:124:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2918:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2930:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2941:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2926:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2926:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2918:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2998:6:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3011:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3022:1:59",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3007:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3007:17:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2954:43:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2954:71:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2954:71:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2880:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2892:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2903:4:59",
                "type": ""
              }
            ],
            "src": "2810:222:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3096:40:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3107:22:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3123:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3117:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3117:12:59"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3107:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3079:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3089:6:59",
                "type": ""
              }
            ],
            "src": "3038:98:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3237:73:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3254:3:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3259:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3247:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:19:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3247:19:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3275:29:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3294:3:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3299:4:59",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3290:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:14:59"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3275:11:59"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3209:3:59",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3214:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3225:11:59",
                "type": ""
              }
            ],
            "src": "3142:168:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3378:184:59",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3388:10:59",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3397:1:59",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3392:1:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3457:63:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3482:3:59"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3487:1:59"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3478:3:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3478:11:59"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3501:3:59"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3506:1:59"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3497:3:59"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3497:11:59"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3491:5:59"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3491:18:59"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3471:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3471:39:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3471:39:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3418:1:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3421:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3415:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3415:13:59"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3429:19:59",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3431:15:59",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3440:1:59"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3443:2:59",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3436:3:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3436:10:59"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3431:1:59"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3411:3:59",
                    "statements": []
                  },
                  "src": "3407:113:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3540:3:59"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3545:6:59"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3536:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3536:16:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3554:1:59",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3529:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3529:27:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3529:27:59"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3360:3:59",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3365:3:59",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3370:6:59",
                "type": ""
              }
            ],
            "src": "3316:246:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3616:54:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3626:38:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3644:5:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3651:2:59",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3640:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3640:14:59"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3660:2:59",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3656:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3656:7:59"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3636:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3636:28:59"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3626:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3599:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3609:6:59",
                "type": ""
              }
            ],
            "src": "3568:102:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3766:283:59",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3776:52:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3822:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3790:31:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3790:38:59"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3780:6:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3837:77:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3902:3:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3907:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3844:57:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:70:59"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3837:3:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3962:5:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3969:4:59",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3958:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3958:16:59"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3976:3:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3981:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3923:34:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3923:65:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3923:65:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3997:46:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4008:3:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4035:6:59"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4013:21:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4013:29:59"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4004:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4004:39:59"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3997:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3747:5:59",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3754:3:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3762:3:59",
                "type": ""
              }
            ],
            "src": "3676:373:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4199:275:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4209:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4221:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4232:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4217:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4217:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4209:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4289:6:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4302:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4313:1:59",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4298:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4298:17:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4245:43:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4245:71:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4245:71:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4337:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4348:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4333:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4333:18:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4357:4:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4363:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4353:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4353:20:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4326:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4326:48:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4326:48:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4383:84:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4453:6:59"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4462:4:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4391:61:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:76:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4383:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4163:9:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4175:6:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4183:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4194:4:59",
                "type": ""
              }
            ],
            "src": "4055:419:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4593:34:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4603:18:59",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4618:3:59"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4603:11:59"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4565:3:59",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4570:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4581:11:59",
                "type": ""
              }
            ],
            "src": "4480:147:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4741:278:59",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4751:52:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4797:5:59"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4765:31:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4765:38:59"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4755:6:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4812:95:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4895:3:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4900:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4819:75:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4819:88:59"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4812:3:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4955:5:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4962:4:59",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4951:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4951:16:59"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4969:3:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4974:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "4916:34:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4916:65:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4916:65:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4990:23:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5001:3:59"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5006:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4997:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4997:16:59"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4990:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4722:5:59",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4729:3:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4737:3:59",
                "type": ""
              }
            ],
            "src": "4633:386:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5205:247:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5216:100:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5303:6:59"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5312:3:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5223:79:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5223:93:59"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5216:3:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5326:100:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5413:6:59"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5422:3:59"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5333:79:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:93:59"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5326:3:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5436:10:59",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5443:3:59"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5436:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5176:3:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5182:6:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5190:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5201:3:59",
                "type": ""
              }
            ],
            "src": "5025:427:59"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_WalletAccount_$9411_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_WalletAccount_$9411_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_WalletAccount_$9411_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_WalletAccount_$9411__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_WalletAccount_$9411_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "599:1582:43:-:0;;;690:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;775:11;757:30;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;733:54;;;;;;;;;;690:102;599:1582;;;;;;;;;;:::o;88:117:59:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;1444:60::-;1472:3;1493:5;1486:12;;1444:60;;;:::o;1510:142::-;1560:9;1593:53;1611:34;1620:24;1638:5;1620:24;:::i;:::-;1611:34;:::i;:::-;1593:53;:::i;:::-;1580:66;;1510:142;;;:::o;1658:126::-;1708:9;1741:37;1772:5;1741:37;:::i;:::-;1728:50;;1658:126;;;:::o;1790:146::-;1860:9;1893:37;1924:5;1893:37;:::i;:::-;1880:50;;1790:146;;;:::o;1942:171::-;2049:57;2100:5;2049:57;:::i;:::-;2044:3;2037:70;1942:171;;:::o;2119:262::-;2232:4;2270:2;2259:9;2255:18;2247:26;;2283:91;2371:1;2360:9;2356:17;2347:6;2283:91;:::i;:::-;2119:262;;;;:::o;599:1582:43:-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "599:1582:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1158:473;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1748:431;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;633:52;;;:::o;1158:473::-;1238:17;1263:12;1278:23;1289:5;1296:4;1278:10;:23::i;:::-;1263:38;;1307:13;1323:4;:16;;;1307:32;;1360:1;1349:8;:12;1345:68;;;1400:4;1371:35;;;;;;1345:68;1493:4;1485:13;;1519:21;1595:5;1553:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:150;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1418:208;;1257:374;;1158:473;;;;;:::o;1748:431::-;1830:7;1858:316;1898:4;1890:13;;1964:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2043:21;2123:5;2081:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:135;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1934:222;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1913:253;;;;;;1858:22;:316::i;:::-;1845:329;;1748:431;;;;:::o;1799:165:18:-;1882:7;1908:49;1923:4;1929:12;1951:4;1908:14;:49::i;:::-;1901:56;;1799:165;;;;:::o;2207:1802::-;2338:12;2445:4;2439:11;3664:12;3657:4;3652:3;3648:14;3641:36;3713:4;3706;3701:3;3697:14;3690:28;3743:8;3738:3;3731:21;3836:4;3831:3;3827:14;3947:4;3940:5;3932:20;3990:2;3983:5;3973:20;3965:28;;2414:1589;;2207:1802;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:59:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:134::-;411:9;444:37;475:5;444:37;:::i;:::-;431:50;;353:134;;;:::o;493:164::-;573:9;606:45;645:5;606:45;:::i;:::-;593:58;;493:164;;;:::o;663:191::-;780:67;841:5;780:67;:::i;:::-;775:3;768:80;663:191;;:::o;860:282::-;983:4;1021:2;1010:9;1006:18;998:26;;1034:101;1132:1;1121:9;1117:17;1108:6;1034:101;:::i;:::-;860:282;;;;:::o;1229:117::-;1338:1;1335;1328:12;1475:96;1512:7;1541:24;1559:5;1541:24;:::i;:::-;1530:35;;1475:96;;;:::o;1577:122::-;1650:24;1668:5;1650:24;:::i;:::-;1643:5;1640:35;1630:63;;1689:1;1686;1679:12;1630:63;1577:122;:::o;1705:139::-;1751:5;1789:6;1776:20;1767:29;;1805:33;1832:5;1805:33;:::i;:::-;1705:139;;;;:::o;1850:77::-;1887:7;1916:5;1905:16;;1850:77;;;:::o;1933:122::-;2006:24;2024:5;2006:24;:::i;:::-;1999:5;1996:35;1986:63;;2045:1;2042;2035:12;1986:63;1933:122;:::o;2061:139::-;2107:5;2145:6;2132:20;2123:29;;2161:33;2188:5;2161:33;:::i;:::-;2061:139;;;;:::o;2206:474::-;2274:6;2282;2331:2;2319:9;2310:7;2306:23;2302:32;2299:119;;;2337:79;;:::i;:::-;2299:119;2457:1;2482:53;2527:7;2518:6;2507:9;2503:22;2482:53;:::i;:::-;2472:63;;2428:117;2584:2;2610:53;2655:7;2646:6;2635:9;2631:22;2610:53;:::i;:::-;2600:63;;2555:118;2206:474;;;;;:::o;2686:118::-;2773:24;2791:5;2773:24;:::i;:::-;2768:3;2761:37;2686:118;;:::o;2810:222::-;2903:4;2941:2;2930:9;2926:18;2918:26;;2954:71;3022:1;3011:9;3007:17;2998:6;2954:71;:::i;:::-;2810:222;;;;:::o;3038:98::-;3089:6;3123:5;3117:12;3107:22;;3038:98;;;:::o;3142:168::-;3225:11;3259:6;3254:3;3247:19;3299:4;3294:3;3290:14;3275:29;;3142:168;;;;:::o;3316:246::-;3397:1;3407:113;3421:6;3418:1;3415:13;3407:113;;;3506:1;3501:3;3497:11;3491:18;3487:1;3482:3;3478:11;3471:39;3443:2;3440:1;3436:10;3431:15;;3407:113;;;3554:1;3545:6;3540:3;3536:16;3529:27;3378:184;3316:246;;;:::o;3568:102::-;3609:6;3660:2;3656:7;3651:2;3644:5;3640:14;3636:28;3626:38;;3568:102;;;:::o;3676:373::-;3762:3;3790:38;3822:5;3790:38;:::i;:::-;3844:70;3907:6;3902:3;3844:70;:::i;:::-;3837:77;;3923:65;3981:6;3976:3;3969:4;3962:5;3958:16;3923:65;:::i;:::-;4013:29;4035:6;4013:29;:::i;:::-;4008:3;4004:39;3997:46;;3766:283;3676:373;;;;:::o;4055:419::-;4194:4;4232:2;4221:9;4217:18;4209:26;;4245:71;4313:1;4302:9;4298:17;4289:6;4245:71;:::i;:::-;4363:9;4357:4;4353:20;4348:2;4337:9;4333:18;4326:48;4391:76;4462:4;4453:6;4391:76;:::i;:::-;4383:84;;4055:419;;;;;:::o;4480:147::-;4581:11;4618:3;4603:18;;4480:147;;;;:::o;4633:386::-;4737:3;4765:38;4797:5;4765:38;:::i;:::-;4819:88;4900:6;4895:3;4819:88;:::i;:::-;4812:95;;4916:65;4974:6;4969:3;4962:4;4955:5;4951:16;4916:65;:::i;:::-;5006:6;5001:3;4997:16;4990:23;;4741:278;4633:386;;;;:::o;5025:427::-;5201:3;5223:93;5312:3;5303:6;5223:93;:::i;:::-;5216:100;;5333:93;5422:3;5413:6;5333:93;:::i;:::-;5326:100;;5443:3;5436:10;;5025:427;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.19;\n\nimport '@openzeppelin/contracts/utils/Create2.sol';\nimport '@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol';\n\nimport './WalletAccount.sol';\n\n/**\n * A sample factory contract for WalletAccount\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n * The factory's createAccount returns the target account address even if it is already installed.\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\n */\ncontract WalletAccountFactory {\n  WalletAccount public immutable accountImplementation;\n\n  constructor(IEntryPoint _entryPoint) {\n    accountImplementation = new WalletAccount(_entryPoint);\n  }\n\n  /**\n   * create an account, and return its address.\n   * returns the address even if the account is already deployed.\n   * Note that during UserOperation execution, this method is called only if the account is not deployed.\n   * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\n   */\n  function createAccount(\n    address owner,\n    uint256 salt\n  ) public returns (WalletAccount ret) {\n    address addr = getAddress(owner, salt);\n    uint codeSize = addr.code.length;\n    if (codeSize > 0) {\n      return WalletAccount(payable(addr));\n    }\n    ret = WalletAccount(\n      payable(\n        new ERC1967Proxy{salt: bytes32(salt)}(\n          address(accountImplementation),\n          abi.encodeCall(WalletAccount.initialize, (owner))\n        )\n      )\n    );\n  }\n\n  /**\n   * calculate the counterfactual address of this account as it would be returned by createAccount()\n   */\n  function getAddress(\n    address owner,\n    uint256 salt\n  ) public view returns (address) {\n    return\n      Create2.computeAddress(\n        bytes32(salt),\n        keccak256(\n          abi.encodePacked(\n            type(ERC1967Proxy).creationCode,\n            abi.encode(\n              address(accountImplementation),\n              abi.encodeCall(WalletAccount.initialize, (owner))\n            )\n          )\n        )\n      );\n  }\n}\n",
  "sourcePath": "/Users/Nobu/Documents/Works/web3/metamask-snap/template-snap-monorepo/account-abstraction/contracts/samples/WalletAccountFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/samples/WalletAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        2240
      ],
      "BaseAccount": [
        3953
      ],
      "Create2": [
        2343
      ],
      "ECDSA": [
        2939
      ],
      "ERC1967Proxy": [
        159
      ],
      "ERC1967Upgrade": [
        477
      ],
      "IAccount": [
        7080
      ],
      "IAggregator": [
        7114
      ],
      "IBeacon": [
        539
      ],
      "IERC1155Receiver": [
        865
      ],
      "IERC165": [
        2951
      ],
      "IERC1822Proxiable": [
        122
      ],
      "IERC721Receiver": [
        1890
      ],
      "IERC777Recipient": [
        1910
      ],
      "IEntryPoint": [
        7312
      ],
      "IStakeManager": [
        7452
      ],
      "Initializable": [
        708
      ],
      "Math": [
        3816
      ],
      "Proxy": [
        529
      ],
      "StorageSlot": [
        2403
      ],
      "Strings": [
        2578
      ],
      "TokenCallbackHandler": [
        10001
      ],
      "UUPSUpgradeable": [
        824
      ],
      "UserOperation": [
        7477
      ],
      "UserOperationLib": [
        7582
      ],
      "ValidationData": [
        6372
      ],
      "WalletAccount": [
        9411
      ],
      "WalletAccountFactory": [
        9543
      ],
      "_intersectTimeRange": [
        6516
      ],
      "_packValidationData": [
        6553,
        6591
      ],
      "_parseValidationData": [
        6431
      ]
    },
    "id": 9544,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9413,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 9414,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9544,
        "sourceUnit": 2344,
        "src": "61:51:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "id": 9415,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9544,
        "sourceUnit": 160,
        "src": "113:64:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/samples/WalletAccount.sol",
        "file": "./WalletAccount.sol",
        "id": 9416,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9544,
        "sourceUnit": 9412,
        "src": "179:29:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "WalletAccountFactory",
        "contractDependencies": [
          159,
          9411
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9417,
          "nodeType": "StructuredDocumentation",
          "src": "210:388:43",
          "text": " A sample factory contract for WalletAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 9543,
        "linearizedBaseContracts": [
          9543
        ],
        "name": "WalletAccountFactory",
        "nameLocation": "608:20:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 9420,
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "664:21:43",
            "nodeType": "VariableDeclaration",
            "scope": 9543,
            "src": "633:52:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WalletAccount_$9411",
              "typeString": "contract WalletAccount"
            },
            "typeName": {
              "id": 9419,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9418,
                "name": "WalletAccount",
                "nameLocations": [
                  "633:13:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9411,
                "src": "633:13:43"
              },
              "referencedDeclaration": 9411,
              "src": "633:13:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WalletAccount_$9411",
                "typeString": "contract WalletAccount"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9434,
              "nodeType": "Block",
              "src": "727:65:43",
              "statements": [
                {
                  "expression": {
                    "id": 9432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9426,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9420,
                      "src": "733:21:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$9411",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9430,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9423,
                          "src": "775:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$7312",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$7312",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 9429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "757:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$7312_$returns$_t_contract$_WalletAccount_$9411_$",
                          "typeString": "function (contract IEntryPoint) returns (contract WalletAccount)"
                        },
                        "typeName": {
                          "id": 9428,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9427,
                            "name": "WalletAccount",
                            "nameLocations": [
                              "761:13:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9411,
                            "src": "761:13:43"
                          },
                          "referencedDeclaration": 9411,
                          "src": "761:13:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WalletAccount_$9411",
                            "typeString": "contract WalletAccount"
                          }
                        }
                      },
                      "id": 9431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "757:30:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$9411",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "src": "733:54:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WalletAccount_$9411",
                      "typeString": "contract WalletAccount"
                    }
                  },
                  "id": 9433,
                  "nodeType": "ExpressionStatement",
                  "src": "733:54:43"
                }
              ]
            },
            "id": 9435,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9423,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "714:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 9435,
                  "src": "702:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$7312",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 9422,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9421,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "702:11:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7312,
                      "src": "702:11:43"
                    },
                    "referencedDeclaration": 7312,
                    "src": "702:11:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$7312",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:25:43"
            },
            "returnParameters": {
              "id": 9425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:43"
            },
            "scope": 9543,
            "src": "690:102:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9499,
              "nodeType": "Block",
              "src": "1257:374:43",
              "statements": [
                {
                  "assignments": [
                    9447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9447,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1271:4:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 9499,
                      "src": "1263:12:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9446,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1263:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9452,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9449,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9438,
                        "src": "1289:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9450,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9440,
                        "src": "1296:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9448,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9542,
                      "src": "1278:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view returns (address)"
                      }
                    },
                    "id": 9451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:23:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1263:38:43"
                },
                {
                  "assignments": [
                    9454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9454,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1312:8:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 9499,
                      "src": "1307:13:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9453,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1307:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9458,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 9455,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9447,
                        "src": "1323:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1328:4:43",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1323:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 9457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1333:6:43",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1323:16:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1307:32:43"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9459,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9454,
                      "src": "1349:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 9460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1360:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1349:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9470,
                  "nodeType": "IfStatement",
                  "src": "1345:68:43",
                  "trueBody": {
                    "id": 9469,
                    "nodeType": "Block",
                    "src": "1363:50:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 9465,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9447,
                                  "src": "1400:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1392:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 9463,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1392:8:43",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 9466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1392:13:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 9462,
                            "name": "WalletAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9411,
                            "src": "1378:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_WalletAccount_$9411_$",
                              "typeString": "type(contract WalletAccount)"
                            }
                          },
                          "id": 9467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1378:28:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WalletAccount_$9411",
                            "typeString": "contract WalletAccount"
                          }
                        },
                        "functionReturnParameters": 9445,
                        "id": 9468,
                        "nodeType": "Return",
                        "src": "1371:35:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9471,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9444,
                      "src": "1418:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$9411",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 9485,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9420,
                                      "src": "1519:21:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WalletAccount_$9411",
                                        "typeString": "contract WalletAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_WalletAccount_$9411",
                                        "typeString": "contract WalletAccount"
                                      }
                                    ],
                                    "id": 9484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1511:7:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 9483,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1511:7:43",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 9486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1511:30:43",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 9489,
                                        "name": "WalletAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9411,
                                        "src": "1568:13:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_WalletAccount_$9411_$",
                                          "typeString": "type(contract WalletAccount)"
                                        }
                                      },
                                      "id": 9490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1582:10:43",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 9223,
                                      "src": "1568:24:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function WalletAccount.initialize(address)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 9491,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9438,
                                          "src": "1595:5:43",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "id": 9492,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1594:7:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function WalletAccount.initialize(address)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 9487,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1553:3:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 9488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1557:10:43",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1553:14:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 9493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1553:49:43",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 9477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1462:16:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$159_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 9476,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 9475,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1466:12:43"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 159,
                                      "src": "1466:12:43"
                                    },
                                    "referencedDeclaration": 159,
                                    "src": "1466:12:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$159",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 9482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 9480,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9440,
                                        "src": "1493:4:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 9479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1485:7:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 9478,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1485:7:43",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 9481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1485:13:43",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1462:37:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$159_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 9494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1462:150:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$159",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$159",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 9474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1445:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 9473,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1445:8:43",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1445:175:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 9472,
                        "name": "WalletAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9411,
                        "src": "1424:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WalletAccount_$9411_$",
                          "typeString": "type(contract WalletAccount)"
                        }
                      },
                      "id": 9496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1424:202:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WalletAccount_$9411",
                        "typeString": "contract WalletAccount"
                      }
                    },
                    "src": "1418:208:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WalletAccount_$9411",
                      "typeString": "contract WalletAccount"
                    }
                  },
                  "id": 9498,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:208:43"
                }
              ]
            },
            "documentation": {
              "id": 9436,
              "nodeType": "StructuredDocumentation",
              "src": "796:359:43",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "5fbfb9cf",
            "id": 9500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1167:13:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9438,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1194:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 9500,
                  "src": "1186:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9440,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1213:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 9500,
                  "src": "1205:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1180:41:43"
            },
            "returnParameters": {
              "id": 9445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9444,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1252:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 9500,
                  "src": "1238:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WalletAccount_$9411",
                    "typeString": "contract WalletAccount"
                  },
                  "typeName": {
                    "id": 9443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9442,
                      "name": "WalletAccount",
                      "nameLocations": [
                        "1238:13:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9411,
                      "src": "1238:13:43"
                    },
                    "referencedDeclaration": 9411,
                    "src": "1238:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WalletAccount_$9411",
                      "typeString": "contract WalletAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:19:43"
            },
            "scope": 9543,
            "src": "1158:473:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9541,
              "nodeType": "Block",
              "src": "1839:340:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9514,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9505,
                            "src": "1898:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1890:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 9512,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1890:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1890:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 9520,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 159,
                                      "src": "1969:12:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$159_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$159_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 9519,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "1964:4:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 9521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1964:18:43",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$159",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 9522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1983:12:43",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "1964:31:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 9527,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9420,
                                        "src": "2043:21:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_WalletAccount_$9411",
                                          "typeString": "contract WalletAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_WalletAccount_$9411",
                                          "typeString": "contract WalletAccount"
                                        }
                                      ],
                                      "id": 9526,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2035:7:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 9525,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2035:7:43",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 9528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2035:30:43",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 9531,
                                          "name": "WalletAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9411,
                                          "src": "2096:13:43",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_WalletAccount_$9411_$",
                                            "typeString": "type(contract WalletAccount)"
                                          }
                                        },
                                        "id": 9532,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2110:10:43",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9223,
                                        "src": "2096:24:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function WalletAccount.initialize(address)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 9533,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9503,
                                            "src": "2123:5:43",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 9534,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2122:7:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function WalletAccount.initialize(address)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 9529,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2081:3:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 9530,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2085:10:43",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2081:14:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 9535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2081:49:43",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 9523,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "2009:3:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 9524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2013:6:43",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2009:10:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 9536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2009:135:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 9517,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "1934:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 9518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1938:12:43",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1934:16:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 9537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1934:222:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 9516,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "1913:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1913:253:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 9510,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2343,
                        "src": "1858:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$2343_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 9511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1866:14:43",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2328,
                      "src": "1858:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 9539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:316:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9509,
                  "id": 9540,
                  "nodeType": "Return",
                  "src": "1845:329:43"
                }
              ]
            },
            "documentation": {
              "id": 9501,
              "nodeType": "StructuredDocumentation",
              "src": "1635:110:43",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "8cb84e18",
            "id": 9542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1757:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9503,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1781:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 9542,
                  "src": "1773:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9505,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1800:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 9542,
                  "src": "1792:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:41:43"
            },
            "returnParameters": {
              "id": 9509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9542,
                  "src": "1830:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:9:43"
            },
            "scope": 9543,
            "src": "1748:431:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9544,
        "src": "599:1582:43",
        "usedErrors": []
      }
    ],
    "src": "36:2146:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0xe390c31Ed9c0646168c849975431584d578321D6",
      "transactionHash": "0x0a932cad5fe6e7bedeb5523af05679b2b1d6f9f1647483641e5135227920682b"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-10T09:43:20.168Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAccount(address,uint256)": {
        "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
      },
      "getAddress(address,uint256)": {
        "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
      }
    },
    "notice": "A sample factory contract for WalletAccount A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.",
    "version": 1
  }
}